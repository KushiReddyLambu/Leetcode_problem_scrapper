the
of
given
return
a
and
is
in
an
to
are
that
you
if
integer
array
number
with
be
it
where
each
all
for
can
n
from
two
or
any
there
1
one
at
by
not
string
0
such
as
integers
=
have
order
on
length
example
nums
same
following
no
-
has
i
this
x
will
only
maximum
+
minimum
may
value
after
answer
ith
k
sum
find
2
equal
than
possible
some
which
0-indexed
elements
s
between
note
then
its
must
first
binary
every
should
true
also
otherwise
we
<=
more
positive
into
characters
so
strings
left
list
values
false
exactly
<
represents
make
-1
right
element
other
m
time
tree
size
index
contains
them
2d
numbers
both
most
3
your
least
int
they
==
valid
nodes
different
node
empty
row
(i.e
representing
sequence
their
j
when
times
letters
multiple
words
choose
exists
result
write
count
root
character
matrix
sorted
unique
column
arrays
operation
another
does
either
smallest
move
once
query
do
7
distinct
non-empty
consisting
indices
total
represented
adjacent
digits
cannot
grid
consists
three
implement
type
within
want
range
key
position
operations
returns
initially
using
format
large

without
largest
indicates
less
since
arr
path
these
name
last
starting
next
modulo
new
ii
contiguous
contain
b
defined
considered
but
class:
need
set
nums[i]
1]
remove
109
lowercase
object
table
start
target
containing
4
*
greater
before
initializes
cell
pair
single
substring
end
note:
denotes
original
second
subarray
generated
|
form
5
get
function
letter
guaranteed
difference
even
take
word
remaining
up
primary
until
schema
sql
numbered
consecutive
table:
longest
english
1)
above
means
edges
called
(0-indexed)
test
that:
use
add
design
edge
pairs
allowed
game
respectively
reach
non-negative
change
digit
moves
connected
cells
strictly
input
current
score
point
cases
id
y
product
subsequence
labeled
needed
group
distance
while
always
>
four
assume
(i
points
check
amount
however
was
starts
void
leading
step
replace
case
positions
deleting
formed
answers
0)
[1
could
space
top
perform
appear
very
graph
would
(0
exist
where:
data
square
increasing
'a'
because
used
day
represent
whose
who
returned
answer[i]
rows
num
ascending
c
queries
zero
many
formally
person
present
changing
down
bi
[ai
jth
substrings
t
ai
steps
ways
conditions
becomes
pick
linked
notice
absolute
varchar
zeros
!=
inclusive
through
search
edges[i]
appears
part
structure
ends
follows:
subarrays
6
rules:
required
>=
delete
nums[j]
j)
determine
algorithm
cost
bi]
final
resulting
smaller
odd
takes
undirected
head
common
task
removing
place
way
lexicographically
impossible
line
turn
children
(possibly
1's
like
previous
split
solution
moving
corresponding
n)
been
shortest
nums1
nums2
'b'
null
how
about
process
according
directly
non-decreasing
representation
/
separated
below
price
still
let
convert
swap
initial
direction
consider
performing
among
good
divisible
complete
people
equals
call
val
nums.length
9
itself
maximize
along
32-bit
palindrome
if:
accepted
arr[i]
permutation
10
whether
height
too
0's
sort
alice
[xi
types
class
report
information
output
decimal
removed
optimally
apply
(inclusive)
alphabet
made
problem
groups
already
divide
spaces
level
kth
paths
bottom
ordered
placed
chosen
average
reverse
conditions:
boolean
+-------------+---------+
go
city
out
highest
define
over
being
occurs
prefix
become
color
leaf
child
rules
n]
infinite
applying
coordinates
traversal
play
bob
area
actual
uppercase
plane
duplicate
occurrence
8
insert
obtained
were
[0
long
keys
goal
construct
occurrences
turns
except
lengths
obtain
pass
wants
yi]
following:
date
repeat
ones
during
board
satisfies
solve
player
""
bitwise
subsequences
concatenation
queries[i]
(in
days
none)
never
lower
trees
those
negative
(a
(1
iii
outside
complexity
minimize
bits
xor
necessarily
'c'
d
simultaneously
parentheses
minutes
together
duplicates
beginning
code
entire
parent
fit
playing
added
(not
system
create
visited
money
currently
shown
derived
select
calculate
subtree
subset
relative
columns
interval
written
back
squares
times:
water
extra
rearrange
instead
forward
10-5
side
partition
connecting
(including
travel
special
tie
know
unit
closest
corner
visit
rectangle
frequency
->
build
k)
node's
correct
employee
bottom-right
customer
flip
suppose
twice
'.'
ans
built-in
2)
user
adding
players
stone
stones
choosing
p
lowest
put
'e'
arranged
top-left
third
per
(the
said
receive
concatenated
width
divided
needs
just
satisfy
based
described
east
greatest
inside
expression
r
invalid
s2
s1
denoting
nth
max
passed
circular
he
prices
assigned
'1'
random
s[i]
bst
names
[starti
results
item
text
please
front
full
adds
found
mat
fewer
leftmost
denote
larger
%
addition
located
longer
(n
replacing
(1-indexed)
achieve
standing
upper
repeated
calls
bit
taken
seconds
under
signed
map
rotate
assign
lists
describes
+---------------+---------+
location
continue
filled
certain
merge
exceed
vi
append
rounded
xi
"abc"
best
'o'
sums
several
students
followed
ans[i]
b)
it's
consist
nums[i
stop
state
3]
power
units
divisor
removes
costs
coordinate
3)
(2
gets
mentioned
subtract
done
intervals
arr.length
calculated
road
buy
student
'0'
endi]
dictionary
vertical
int[]
functions
store
limit
places
match
available
trailing
maximized
colors
sentence
changed
prime
occur
transform
reads
x-axis
ids
division
'z'
4-directionally
minute
condition
box
ui
include
arr[j]
repeating
1st
rest
wall
words[i]
employees
building
non-overlapping
pattern
increase
keep
modify
i.e
follow
vertically
points[i]
sequences
increment
again
weight
round
run
items
similarly
ending
'
method
rearranging
see
'r'
wins
win
runs
network
directed
backward
palindromic
differ
might
fn
version
reaches
deleted
iv
jump
replaced
nearest
destination
moment
'i'
diagonal
stops
flips
starti
nums1[i]
true:
south
going
foreign
specific
depth
fits
middle
directions
rotation
zeroes
encoded
alternating
immediately
making
friend
friends
finish
his
additional
belongs
seats
clockwise
walk
well
vertices
inserts
inserted
[ui
val)
concatenating
follows
cities
steps:
higher
scores
having
[2
floor
sign
1])
nums[0]
belong
minimized
events
plus
rightmost
including
asked
meaning
queue
100
cover
users
begin
counted
constructed
horizontally
permutations
{
}
file
modified
customers
print
robot
our
assuming
2n
leaves
now
v
'd'
break
swaps
shows
pay
stream
accepts
remains
instance
vi]
singly
similar
arr[i
n-1
program
created
3rd
subtrees
yi
sell
neighbors
'u'
north
west
(m
onto
continuous
rotated
o(1)
probability
event
horizontal
identical
room
'*'
wait
(bst)
additionally
played
nums[k]
suffix
specifically
blue
arr[0]
winner
off
+-------------+------+
leave
matches
c)
circle
around
constant
randomly
base
stack
ordering
share
2]
y)
(with
way:
placing
speed
endi
right)
performed
rooted
orders
seat
possibly
company
(of
beautiful
intersection
insertion
uses
x-y
l
boxes
solutions
[lefti
[a
latest
earliest
bidirectional
dollars
pointer
stock
profit
distribute
(can
meets
much
11
combination
zero)
pile
products
included
colored
rule
'+'
'x'
constraints
arithmetic
applied
lexicographical
ab
double
('a'
sorting
as:
arr[1]
supports
maximal
(row
period
'-'
word1
word2
changes
[left
matching
subsets
car
(x
white
rectangular
transactions
decide
salary
(r
associated
decreasing
either:
decrease
completely
five
stored
top-right
non-zero
arbitrary
operations:
anywhere
implementation
2nd
'#'
serialization
prices[i]
candies
meet
due
overlapping
house
update
language
decided
block
grid[i][j]
read
+--------------+---------+
covered
image
degrees
bool
indicating
traveling
(if
collect
what
inputs
denoted
heights
triplets
generate
makes
properties:
red
0th
year
holds
evaluate
started
she
say
later
capacity
nodes'
z
col)
piles
')'
series
push
user_id
right]
can:
open
reorder
taking
nums[1]
request
reversed
remain
coins
center
counts
piece
frequent
rank
h
o(n)
arrive
(where
num2
num1
length)
parallel
rectangles
bottom-left
operator
multiplication
free
bank
concatenate
labels
subsequent
reachable
reconstruct
preorder
"a"
vowels
houses
vice
intervals[i]
combinations
swapping
fixed
received
rotating
support
sets
mark
had
come
message
player's
stay
perfect
island
|x|
1s
12
cycle
90
enum
rounds
vowel
ranges
land
equivalent
memory
course
help
is:
'('
answer.length
expressions
let's
work
hour
mapping
(from
exam
chessboard
sides
factors
x)
and/or
finally
decode
card
'l'
cut
comes
segments
pieces
running
manager
queries[j]
nested
segment
balanced
boundary
shape
us
alice's
stones[i]
far
ancestor
ignored
fromi
[fromi
toi
x2
axis-aligned
overlap
(x1
triangle
intersect
vertex
satisfying
etc
limited
:
thus
indicate
removal
removals
parts
b]
lefti
righti]
order)
hours
converted
replacement
divides
finding
copy
tasked
num)
roads
country
source
record
radius
splitting
future
doing
street
ensure
grouped
nums2[i]
o(log
sold
product_id
contained
inserting
flipping
deletions
abs(x)
provided
multiply
reduce
earlier
team
draw
increments
half
ri
-x
significant
tasks
logs
in-place
rearranged
format:
arr[arr.length
judge
recall
empty)
mean
formatted
requests
disjoint
enter
previously
surrounded
nothing
string)
col
strs
none
brackets
evaluates
cards
across
picked
(a)
choice
fully
pushes
1000
weights
themselves
modifying
own
example:
checks
did
hand
chooses
give
'y'
anagram
nums2[j]
notes:
factor
balls
cols
nums[j])
traverse
descendant
allow
connection
forming
ball
minimal
y1)
y2)
happens
figure
neighboring
worker
workers
value)
operators
subtraction
calling
waiting
repeatedly
rating
righti
symbol
passes
separate
lie
forms
"ab"
transaction
candy
characters:
sit
selected
kind
manner
composed
cardinal
non-increasing
increases
analysis
(xi
yi)
equally
descending
collection
small
differences
online
exact
nor
independent
abs(i
's'
obstacle
label
"abcde"
particular
able
garden
eat
amongst
generates
alternate
goes
encoding
reference
regardless
s.length
[i
ri]
toward
0s
reached
(starting
low
high
job
trip
queries.length
underlined
-1]
counting
sequentially
bag
whole
courses
phone
executed
real
"1"
lose
lead
milliseconds
puzzle
optimal
answer[0]
answer[1]
pop
earn
broken
runtime
drop
unless
algorithm:
operation:
partitioning
26
built
food
'f'
custom
node.val
parents
hold
leetcode
weighted
simple
threshold
missing
visits
5]
deletion
jumps
doesn't
world
versa
4th
below:
others
closed
automatically
loses
descendants
definition
indirectly
merged
fourth
(x2
movement
be:
returning
chunk
writing
towards
values:
appended
pricei
pairs[i]
(both
arrival
station
positioned
converting
examples
evenly
satisfied:
connects
requirements:
buildings
root)
constructor
[3
blocks
affect
reports
quantity
centered
works
varying
stores
times)
i]
1-indexed
address
numeric
marked
cost[i]
compare
w
"ace"
[1,2,3,4]
interpreted
wrong
compute
leaving
log
teams
multiplied
testcases
trying
directions:
j]
fill
'u')
median
[li
partitioned
5)
treat
6)
vj
uj
[uj
server
allocate
individually
arguments
huge
arrange
outgoing
access
computed
evaluation
secret
gain
her
sitting
else
add(int
tile
printed
tokens
values[i]
linear
[1,2,3]
finished
continues
"0"
[]
variable
231
roots
'/'
1)th
plant
'9'
public
chose
parenthesis
endpoints
requirements
differs
x1
falls
fall
pivot
cycles
here
walls
coin
sentences
black
moved
opposite
1:
15
distances
arr1
arr2
answer[j]
weighti]
+----------------+---------+
divisors
video
pop()
push(int
shop
shift
painted
corresponds
13
indexed
department
website
various
straight
nums)
nice
error
transformation
objects
shares
distinct)
arrives
social
triplet
tasks[i]
completed
existing
(or
tree)
perm
perm[i]
locations
occupied
field
(see
palindromes
anagrams
facing
games
zigzag
a[1]
q
computer
disconnected
crossing
toi]
"abcd"
y-axis
perimeter
regular
quality
chunks
happen
keyboard
(4
'p'
time[i]
met:
resultant
describe
simplicity
[idi
restaurant
[c
alphabetical
delay
train
unknown
"hh:mm"
k-th
container
serialized
disturbing
not)
dot
meeting
attend
office
detect
consecutively
iterator
outer
alphanumeric
phrase
topmost
conversion
ranks
sale
likely
shapes
border
can't
left)
produce
form:
infinitely
email
send
periods
allows
emails
local
sent
security
frequencies
10^9
cycles)
60
duration
magic
allocated
rooms
|i
j|
school
messages
flowers
9]
7]
slices
'g'
'm'
api
internal
ways:
arrangement
20
simplified
li
dice
rolls
percentage
collected
mod
parameter
vj]
servers
alphabetically
direct
month
mountain
standard
fibonacci
24-hour
successful
trips
provide
guess
root-to-leaf
walking
(except
[-1
entries
d)
(i+1)th
lost
key)
token
face
preceding
maps
(as
timestamp
selling
val;
schedule
stand
unable
expected
ladder
execute
calculator
intermediate
123
"123"
lines
(and
nesting
a2
competition
library
strength
equation
decoded
50
instances
applies
[4
question
4]
^
components
fair
prerequisites
environment
window
die
(contiguous)
|nums[i]
sizes
i)
freely
instructions
named
bus
bags
x-coordinate
"010"
//
neighbor
ci]
thread
'a')
sliding
filling
forever
repeats
2:
piles[i]
visiting
neither
logs[i]
idi
blocked
beauty
excluding
cars
necessary
kinds
idle
proven
handle
balance
falling
shifting
shorter
paint
accounts
are:
overall
spend
cuts
updates
unfortunately
nums1.length
diagonally
calculation
sub-arrays
beyond
respective
causes
obstacles
daily
capital
activity
passengers
[x
xth
media
(represented
diff
matter
booking
happy
calendar
gives
away
diagonals
empty:
green
mapped
recursively
't'
frog
diagram
reaching
super
inclusively
further
keeping
counterclockwise
reformat
whenever
spiral
gcd
(even
a[0]
planning
wikipedia:
connections
determined
u
via
acyclic
y1
clear
counter-clockwise
paid
ratio
compared
constructs
string[]
insert(int
usual
terms
methods
parameters
cross
crosses
river
banned
nums[i+1]
get(int
and:
causing
hold:
p1
vice-versa
numerical
21
dates
counter
clock
look
25
calculates
journey
timei
passing
knows
splits
words[j]
signifies
criteria:
themself
route
pricei]
hasnext()
next()
initialized
robber
infected
[start
floors
grid[r][c]
erasing
array's
display
this:
better
ranking
decreases
sales
product_name
bi)
quantities
distributed
amounts
distribution
valuei
attended
formula
result[i]
recent
arrows
keeps
balloons
xy-plane
num[i]
besides
domain
"alice"
dots
actually
integers:
min
40
manner:
0-9
solving
appeared
satisfied
flower
grow
eating
(to
arr[k]
aforementioned
everyone
receives
anything
paper
picking
ever
flatten
hamming
integral
actions
target)
candidates
unlimited
string:
islands
(horizontal
sub
f
a[i]
roll
shuffle
500
averages
validate
'f')
8)
begins
continuously
unsorted
jumping
(that
words)
paths[i]
float
attack
00:00
deletes
rate
status
rectangles[i]
tickets
minus
eats
bounds
properties
happened
domino
peak
includes
two-dimensional
picks
track
seq
key-value
tiles
possibilities
[3,2,1]
rearrangement
property
view
tower
pointers
colors[i]
queue)
downward
checker
dist
resolve
execution
degree
separating
[-231
restricted
mathematical
bob's
enough
functions:
factorial
entering
'?'
ended
origin
specified
'w'
'n'
getting
avoid
opening
spell
unoccupied
endpoint
title
seven
simply
27
nine
languages
known
skip
questions
root2
root1
records
connect
night
rob
startpos
dropped
cause
paired
files
queens
configuration
"hello"
"o"
6]
s[j]
generator
constraint
partitions
occurring
'5'
unlock
nums[n
ugly
net
-->
strange
tournament
lands
assigning
reversing
levels
content
"aa"
y-coordinate
(left
0;
code:
(int
judge:
i++)
kilometers
machine
["abc"
n2
triple
desired
[ri
(ri
(nums[i]
nums[j]|
collide
robots
encode
yellow
appending
travels
0's)
refer
knight
column)
eight
undefined
again)
engage
stones'
assignment
restrictions
wi
euclidean
-3
array)
slots
teacher
finishes
composition
procedure
processed
threads:
discount
considering
self
non-space
visible
interested
tallest
16
account
nums.length)
close
price[i]
(wrapping
typed
(an
details
submatrices
postorder
si
s3
employee_id
repetition
supply
(no
customer_id
planted
hi
s)
folder
different)
inorder
deeply
expansion
painting
section
rain
immediate
order_date
passenger
i-th
y]
shifts
starttime
once)
gap
&
roads[i]
bad
shuffled
n-1)
my
pi
basket
baskets
buying
yields
command
market
(6
yj
appends
participating
fraction
nums[nums.length
turned
finds
stick
(non-empty)
labelled
boundaries
ten
recursive
digits)
list's
trivially
statement
30
dashes
him
lodash's
json.parse
json
will:
component
high]
[low
login
nary-tree
n-ary
examples)
rotations
jobs
(empty
compressed
cell)
furthermore
hidden
ability
belonging
age
stations
treated
0.5
world"
hello
"hello
perm[i
itself)
eventually
(but
lucky
ix
a[2]
odd-indexed
even-indexed
costs[i]
connections[i]
in-order
[startrow
uniquely
"abcc"
collisions
collision
hire
arriving
unary
old
warehouse
remember
restore
obtaining
attributes:
index)
filter
p2
d]
chain
y[i]
x[i]
delayed
etc.)
"acb"
summation
yyyy-mm-dd
bi-directional
timei]
serialize
throws
lies
"c"
subjected
giving
[1,2,3,4,5]
favorite
5th
flight
stashed
respect
adjacency
spread
...]
0]
1-indexed)
[1,3,5]
contents
(you
whereas
(ai
corners
follow:
getrandom()
valuei]
events[i]
inclusive:
targetsum
times[i]
persons
t)
balloon
flipped
'@'
addresses
r1
device
'0's
'1's
"aab"
staircase
climb
temperature
preferred
===
"aec"
searchword
meetings
held
reading
symbols
bloom
apple
eaten
dollar
nobody
driving
bar
implemented
occupies
mouse
3sum
(minimum
64-bit
short
words.length
indices[i]
escape
2-d
s[i
dimensions
matrices
(representing
non
len
duplicates)
show
values)
maximizes
fractional
losing
ip
upper-case
left-to-right
pos
r)
)
(this
judged
+-------------+-------+
contest
reset
mm
23:59
widths
deque
dividing
+-------------+----------+
non-leaf
evaluating
selecting
heighti]
asks
inclusive)
101
elements)
str2
str1
relationship
critical
dominoes
mat[i][j]
touches
uncolored
(for
cache
capacity)
put(int
[1,3,2]
members
axes
xy
2-dimensional
frequently
(product_id
candies[i]
reset()
seconds)
comprises
offers
correspond
context
photo
heights[i]
executing
reject
promise
asyncronous
ties
multiplicity
lexicographic
basic
evaluated
variables
coefficient
wide
tell
guarantee
gcd(x
"("
")"
though
b:
plants
(also
monotone
summary
int[][]
experience
pref
elapsed
methods:
designed
decrement
9)
positions)
magical
to:
movie
movies
2020
case)
used:
numerals
six
principle
destroyed
integer's
individual
cutting
solved
prerequisites[i]
numcourses
alerting
contact
police
few
22
'2'
bounded
startvalue
reuse
owner
enters
customers[i]
-2
truncate
tests
flattened
pairings
imagine
placement
queen
sometimes
simulation
edges[j]
+=
dead
'7'
unchanged
file.txt
stays
drives
instruction
excel
sheet
28
ki
ki]
determines
ways)
directory
complement
down)
staying
expectednums[i];
expectednums
assert
assertions
expectednums.length;
[...];
redundant
[2,3,4]
dist[i]
project
people[i]
b2
c2
vals[i]
star
vals
subgraph
subgrid
covers
ci)
normal
threads
scheduled
parity
viewed
2.5
comprise
x|
factory
traveled
forest
trees)
routes
buses
3:
parents[i]
exchange
input/output
val]
val:
retrieves
tweets
feed
list<integer>
tweet
chess
callback
vali
guards
list1
list2
volume
104
positions[i]
delivery
x's
"01"
action
weighti
password
"aba"
relations
tells
positioni
[positioni
represents:
occupy
marking
big
importance
procedure:
exists)
captured
regions
region
(5
libraries
erase
behind
blank
alternately
save
pushed
force
height-balanced
aligned
press
requires
1d
enhances
17
income
[nums[k]
nums[k-1]]
unrooted
lying
deserialize
deserialized
restriction
buffer
link
checked
legal
submatrix
sn
1))
departments
i:
backwards
allowed)
working
years
half-open
hands
managers
nums[left]
loss
liters
buckets
types:
bought
movements
grid[row][col]
drawing
0-indexed)
preparing
upcoming
wish
planting
coming
hi]
(note
(each
whitespace
objective
manhattan
"2"
folders
accept
reduces
decrypt
wordlist
converts
booleans
"."
(empty)
shared
spreading
c1)
(there
day)
colori
(excluding
elevation
listed
'|'
(bitwise
t1
t2
nums2.length
"()"
catch
ranges[i]
()
speed[i]
invert
(such
deepest
time)
live
dies
sub-array
nums3
{0
on)
depending
simulate
7)
shuffling
fuel
ride
direction:
process:
deep
distributions
implementing
book(int
successfully
events.)
end)
session
position[i]
[xj
1-9
singly-linked
pressed
conflict
afterward
denominator
fruits
321
k-1
profit[i]
member
reordered
merging
script
majority
arr[left...right]
8]
sticks
swapped
"0100"
typically
videos
'z')
res
identify
('0'
'9')
attain
hash
signal
"leetcode"
-1)
bitwise-xor
genetic
ingredients
bracket
ranked
6-sided
valued
m)
function:
recover
parser
plots
existed
1][n
grid[m
reminder
pyramid
nums1[j]
representations
successive
difficulty
matrix's
main
past
iterates
run-length
bricks
val2
val1
(user_id
logged
someday
calculations
arrays:
[5
primes
denominations
items[i]
pickup
"b"
uncommon
(3
chars
choices
i0
i1
price)
[rowi
coli]
partial
west)
...)
assumed
arr[j
(binary
structurally
arr1[i]
arr2[j]
+----------------+----------+
worked
holding
l)
tuples
sequential
cpu
drive
arr1.length
di
xored
graph[i]
pays
arrangements
frequency)
ie
wikipedia
2h
scheduling
itself).”
(lca)
lca
“the
computers
extract
ancestors
(dag)
[x1
awesome
convex
polygon
reside
rational
express
layout
numsl+1
[numsl
numsr-1
numsr]
fresh
orange
oranges
rotten
bridge
efficient
waits
efficiency
maxsum
[nums[i]
attribute
doubly
ideal
(meaning
maxdistance
distancei]
filtering
fashion
strings:
index:
?
grammar
01
[2,5,10]
[1,2,1,2,4,1,5,10]
cyclic
maxtime
differing
fee
commas
comma-separated
non-null
"bc"
codes
ratings
(ie
[2,3,5]
scores[i]
redistribute
('a')
award
'p':
eligible
'a':
late
('l')
attendance
'l':
absent
"011"
repetitions
cheapest
flights
v)
referred
versa)
m(initial)
graph[i][j]
malware
necessary)
end]
handling
verifying
special[i]
manages
rented
increased
skyline
shaped
viewing
contour
city's
signs
pointing
grid[i][j
grid[i
"abcdefghijklmnopqrstuvwxyz"
line:
rows:
student_id
reward
become:
a[n-1]]
[a[n-1]
[a[0]
[4,5,6,7,0,1,2]
[0,1,2,4,5,6,7]
a[n-2]]
quarter
2019
seller_id
buyer_id
pick()
v]
[u
45
biggest
reporting
related
remove(int
getrandom
enddayi
[startdayi
attending
startdayi
nodes)
downwards
vote
tied
votes
shot
burst
arrow
diameter
flat
bursting
mail
"leetcode.com"
pascal's
shown:
plan
interfere
laser
join
r2
stairs
climbing
lower-case
sub-tree
floating
text)
decomposition
chunked
song
songs
memoize
cached
memoized
k]
search(string
dictionary)
tree's
farthest
modifies
unused
endi)
half-closed
meetings[i]
instructed
(0)
apples
j:
soldiers
-5
11)
truck
glass
metal
shouldn't
uniform
10]
testing
cat
pre-order
treenode
source[i]
target[i]
including)
independently
k-sum
triangles
s[k]
(clockwise)
halves
land)
vertical)
f(1)
f(0)
0-based
a[j]
a.length
worddict
space-separated
segmentation
reused
rolls[i]
u)
self-edges
poor
truncates
computing
"192.168@1.1"
"neither"
"192.168.1.1"
255
hexadecimal
specify
ignoring
joined
summing
10)
internally
tail's
characters)
one's
answer[x]
ans[j]
(more
min(i
partitions)
loop
therefore
attempt
interface:
warm
f2
pairing
effect
attacking
enemy
[t
hh
23
00
59
isfull()
isempty()
taxi
driver
friend's
arr[1])
[widthi
division)
departure
tickets[i]
departs
fifth
[2,7,4]
[2,4,2]
[4,2,3,7,2,1,4]
elements'
sea
likes
you're
sensitive
everybody
identified
then:
spent
entry
entered
matched
dominoes[i]
brings
covering
0.25
pow(x
tracker
seq[i]
initialize
recently
exceeds
tiles[i]
[2,3,1]
arr:
root.val
cubes
3d
element)
mid
provides
intersecting
*left;
populate
*right;
*next;
struct
populating
2k
matrix[i][j]
flip()
solution(int
optimize
resets
durationi
rope
separation
"xxxx"
asterisks
mine
collecting
prefers
(j
students[j]
preference
queue's
step:
promises
pool
executes
acceptable
"1
term
order:
concept
successor
24
stopped
pixels
lcm
"(()"
vps's
")("
depth("")
vps
(denoted
depth(a
"()()"
")")
depths
depth("("
depth(a)
"()(()())"
depth(b))
max(depth(a)
vps)
depth(s)
watering
plants[i]
capacities
refill
addnum(int
a1
energy
opponents
training
edit
permitted
searches
expiration
selection
rule:
flood
"(()))"
closing
"()))"
strengths
success
solvable
budget
ascii
top)
user_id)
user's
february
(ignoring
completing
ignore
"abc
xxvii
(1000)
xx
(100)
usually
(500)
symbols:
iiii
(10)
400
numeral
900
(5)
xii
roman
(50)
smash
java
unsigned
skipped
[1,9]
traffic
height)
extending
smart
tour
entrance
2's
obeys
certainty
egg
breaks
unbroken
eggs
n!
throughout
-231
index2
index1
curr
f(x)
yourself
yield
identifier
maintain
classes
'q'
n-queens
extension
applications
fulfilled:
colsum
waste
packages
produces
package
xi+1
percent
'3'
displays
turning
wheel
slot
lock
ant
wooden
set)
transfers
requests[i]
employee's
race
+1
advances
advance
color)
aa
"aaa"
s[lefti...righti]
(land)
(water)
cup
cups
exceeding
faces
asteroids
asteroid
weakest
strongest
info
targety)
(targetx
finite
"101"
year)
sale_id
(sale_id
walked
'\n'
file/directory
directories
tab
important
things:
marks
rests
digits[i]
professional
tonight
arr[2]
minimizes
entirely
try
amount)
withdraw(int
withdraw
[-1]
deposit
$20
skills
skill
triples
published
researcher's
cited
papers
researcher
h-index
citations[i]
citations
describing
surface
programming
operating
'e')
views
|val|
a[a.length
limitj
repaired
repair
|y
limitj]
limits
"fizzbuzz"
buzz
"buzz"
fizz
"fizz"
row-wise
cipher
linked-lists
head)
heads
ahead
union
[typei
typei
traversed
parents[0]
sub-grid
bottomleft;
bottomright;
sub-grids
isleaf:
quad-tree
topright;
terminator
isleaf
isleaf;
proper
topleft;
recurse
wiki
[isleaf
logical
parsed
startcol)
(startrow
startcol]
post
news
uniformly
attempts
interface
score)
gone
latter
former
touching)
bijection
wi]
category
criteria
mass
service
"00"
"10"
active
expressed
million
maze
tables
strong
prerequisite
reply
guesses
guessed
time]
speeds
one-lane
collides
fleet
meters
slowest
lot
incorrect
protected
checking
unlocks
typing
safe
(left)
completes
(right)
moves[i]
capture
master
arrived
processing
sends
newly
server(s)
instantly
because:
80
search(int
situation
faster
comparing
layers
layer
performance
stack's
slashes
$1
puts
traversing
nums:
processes
totally
dial
ring's
ring
button
spelling
align
k1
k2
squared
restrictions[i]
14
!==
salaries
monthly
categories
"high
nums[k+1]
nums[n-1]
halve
trips[i]
serialization/deserialization
compact
reconstructed
transmitted
minimums
parse
convenience
e1
e2
innermost
'n')
('y'
stopping
robbing
systems
summer
cream
bars
ice
involving
+------------------+---------+
partially
tracks
angle
managerid
there?
rooms[i]
b's
a's
row1
row2
col1
75
maintained
operation)
incremented
invalidate
immutable
numarray(int[]
nums[right])
nums[left
sumrange(int
numarray
type:
coprime
got
duplicated
originally
till
subarray's
knight's
gains
incomplete
well-formed
situated
gardens
count()
reduced
bug
home
bonus
preserving
indirect
stonevalue
"bob"
[hi
y1|
x1|
level)
returns:
took
position)
strategy
chalkboard
init
decrypted
bomb
sk
endword
beginword
eliminate
elimination
nums[i+1])
newnums[i]
triangular
newnums
great
(one
one)
installing
install
installed
contaminated
uninfected
cells)
resources
spreads
c2)
numerically
02
growth
before)
colori]
mixed
sake
(without
raining
trapping
trap
foods
alphabetic
appearing
monitor
temperatures
finishing
precedence
company's
coins[i]
activity_type
machines
activities
m|
locked
engineer
different:
y2
shifts[i]
met
load
port
ship
weights[i]
[starttime
[10
recorded
freq
endtime)
example)
(every
frame
instantaneously
dropping
left/right
landing
direction)
"the
furthest
lined
customer's
names[i]
trimmed
trim
"vyz"]
["abcdef","uvwxyz"]
3}
["bef"
rising
empty()
(double-ended
supported
natively
peek/pop
(push
top()
updated
path)
url
problem:
[0,1,1]
[1,1,0]
liter
firsti
[firsti
reserved
abs(nums[i]
nums[index]
a3
prints
printnumber
console
c:
a:
answers[i]
copied
cookies
indexing
scheduler
type)
fibonacci-like
angles
|x
y|
army
floating-point
mean:
afterwards
stationary
points.length
xj
(xj
yj]
hi)
yj)
sub-boxes
sudoku
'k'
penalty
cells:
(k
backspace
resolved
cooldown
bill
x:
xj|
|xi
guarded
drops
upon
fruit
want:
disconnect
worth
all)
extended
doubled
group[i]
profitable
app
word's
excluded)
printer
same)
node2
node1
bash
efficiently
arr)
query(int
xn
tic-tac-toe
eval()
"1010"
worker's
popular
population
birth
death
stamping
transformed
university
subject
subjects
tested
rods
fn(arr[i]
borders
images
erased
plate
peek()
peek
definitely
multi-dimensional
(all
remove(key)
collects
contrast
wonderful
separately
cancel
cancellable
transferred
incoming
permute
vali]
key's
retrieve
stamps
carpetlen
linked-list
bound
⌊n
batch
serving
serve
groups[i]
defines
parent[i]
node)
mini
solution(int[]
violating
prefix)
insert(string
partial)
|arr[j]
|arr[i]
trees[i]
pj
(labeled
fruits[i]
'_'
nums[0..i]
3x
hit
stacking
stacked
row)
creating
(indexed
indexes
"
non-digit
inverse
plot
pig
non-equal
wiggle
-1:
performs
stands
anti-clockwise
z)
boxes[i]
carry
maxsize
transpose
yet
decrements
pieces[i]
c+1)
rook
bishop
(r+1
obstacles[i]
spellchecker
next(int
powers
clone
cloned
flowers[i]
replaces
ladders
ranging
sections
effective
cousins
order_id
costi
ball's
copies
s[i+1]
starttimei
endtimei
safely
quadruplets
4sum
explanation
distributing
player_id
(player_id
event_date)
games_played
logging
event_date
device_id
boomerang
erasure
dash
abbreviated
spans
snake
50ms
60ms
100ms
400ms
30ms
exit
single-space
multiples
molecule
1337
must:
25)
distance[i]
(id
cj
equations
equations[i]
fewest
mines
iteration
prefixes
tiling
[pricei
s[0]
consistent
(r1
book
bucket
fed
'h'
examine
"aebdc"
"aeb"
compression
compress
modifications
seats[i]
cartesian
drawn
circumference
prepending
quotation
"name"
nums[i1]
transactions[i]
"kjf"
into:
"11106"
"26"
"aajf"
"06"
a-z
mapping:
06)
"6"
(11
grouping
subsequence's
(
cinema
pad
upper]
[lower
grid[rowi][coli]
nums[2
supposed
parts:
respecting
subordinates
relationships
satisfies:
formats:
(either
divisibility
richest
"happy
presses
digits:
formatting
king
constraints:
words2
words1
nums[0])
ages[i]
ages
older
update(int
throw
3n
colj]
(north
[rowj
6th
odd-numbered
(index
mutate
number)
moves)
liquid
allotted
(c
idx
preserved
105
family
unequal
carries
i's
tries
grid[0][0])
stations[i]
equality
page
history
browser
coloring
bst's
matrix[row][col]
appropriate
const
obj
sure
person's
predict
removeduplicates(nums);
k;
kept
shopping
leftover
overlapped
natural
forwards
function)
don't
outcome
ticket
reformatted
departmentid
time_stamp
time_stamp)
datetime
vii
cherry
cherries
sequence:
movecost
for:
pushing
cook
×
simulates
board[r][c]
switcher
bulb
bulbs
inputs:
stacks
132
ground
heighti
seed
function's
thrown
pairwise
"12"
hh:mm
"ccc"
s1[i]
hour)
rides
forth
('m'
[3]
miles
car's
tank
gas
matrix)
arr2.length
starttime[i]
endtime
endtime[i]
communicate
leads
i2
ik
non-intersecting
valid)
tag
spanning
forgot
deck
deck[i]
party
[arrivali
infinity
single-threaded
popped
mirror
proved
encoded[i]
keys[i]
hits
slice
pizza
amounti
picky
quote
find(int
kingdom
someone
c++
cheese
of:
disappear
(i-1)th
(here
line)
tuple
chef
('1'
unrevealed
"001"
brick
"13"
"cba"
southeast
grid's
cstart)
(rstart
northwest
later.)
gcd(nums[i]
traversals
turn)
a[3]
a[4]
interview
bcosti
acosti
fly
[acosti
bcosti]
flying
cables
ethernet
ors
startcolumn]
boundary)
startrow
maxmove
startcolumn
accommodate
unidirectional
rec2
rec1
touch
y2]
monkey
monkeys
expectation
wage[i]
wage
quality[i]
orderedstream
idkey
orderedstream(int
(list)
(idkey
(+
(-)
op2
/)
(op3)
adhere
(/)
x"
(op1)
conventions:
(op2)
negation
op1
"-x
"x
fingers
|y1
x2|
|x1
y2|
numsi+1
numsi
csum(1)(2,3)
csum(1,2)(3)
csum(1)(2)(3)
csum(1,2,3)
curry
curried
practical
sum(1,2,3)
rotting
elapse
warehouse)
[lefttorighti
lefttorightj
(new
lefttorighti
warehouses
pickoldi
regulate
righttolefti
putnewi]
putnewi
righttoleftj
(old
nums[i+1]]
adjacentpairs[i]
adjacentpairs
[nums[i+1]
nums[i]]
forgotten
deleteatindex(int
prev
indexth
addatindex(int
addattail(int
mylinkedlist
addathead(int
pointer/reference
mylinkedlist()
odd-length
maxvalue
restaurant)
ratingi
maxprice
veganfriendlyi
vegan-friendly,
restaurants[i]
filters
restaurants
veganfriendly
true)
24-hours
delayedtime
arrivaltime
letter's
"021"
targetword
secondword
'j'
firstword
etc)
"00:00"
"23:59"
digital
0110
gcds
[4,6,16]
dth
mk
mkaverage(int
addelement(int
calculatemkaverage()
mkaverage
passingfees
cities)
passingfees[j]
fees
"9,3,4,#,#,1,#,#,2,#,6,#,#"
sentinel
"1,,3"
encounter
verify
dart
dartboard
threw
darts[i]
darts
throwing
sprefix
bprefix
aprefix
ssuffix
asuffix
bsuffix
[1,5,3]
seating
invited
capable
favorite[i]
organizing
toeplitz
inspection
variety
official
"001101"
(consecutive
sub-sequence)
src
flights[i]
dst
(u2
(u
v1)
(uk
(u1
v2)
vk)
bstiterator
initializing
bstiterator(treenode
non-existent
(bst):
refuses
homes
robbed
capability
steal
steals
pairs)
order(with
referee_id
referee
newinterval
(merge
queries:
r]
surprisingly
alien
relaxation
designated
building)
0-height
prism
non-alphanumeric
1][j])
[1,3,4]
competitive
"za"
pseudo-palindromic
numrows);
legibility)
convert(string
g
"pahnaplsiigyir"
"paypalishiring"
font
negative_feedback
report[i]
student_id[i]
positive_feedback
feedback
sale_date
2019-01-01
2019-03-31
unit_price
groupsizes[1]
groupsizes
groupsizes[i]
rects[i]
solution(int[][]
rects
rects)
purple
depicted
rhombus
sum:
node;
(right
linearly
randomizedcollection
randomizedcollection()
multiset
multiset)
specialty
retail
quantities[i]
"h2o2he3mg4"
"h2o"
atom
"h2o2"
"(h2o2)"
(optionally
formulas
chemical
element's
added)
"(h2o2)3"
atomic
atoms
"h1o2"
sum(|nums[i]-nums[j]|)
(among
topvotedcandidate
cast
q(int
topvotedcandidate(int[]
persons[i]
candidates)
election
xend
[xstart
taped
xstart
spherical
stretches
xend]
y-coordinates
y-direction)
prefix-aligned
flips[i]
"my@email.com"
"alicez@leetcode.com"
forwarded
"alice.z@leetcode.com"
"m.y+name@email.com"
mails
everything
emails[i]
filtered
"alice@leetcode.com"
numrows
devices
while'1'
beam
bank[i]
anti-theft
activated
beams
start)
up-left
(diagonally)
labels[i])
[kelvin
32.00
kelvin
1.80
fahrenheit]
fahrenheit
celsius
273.15
(subtext1
subtextk
subtexti
subtextk)
subtext1
subtext2
f(s)
f(w)
"dcce"
f(queries[i])
durations
time[j])
(time[i]
wear
hats
hats[i]
[-k
magicdictionary()
builddict(string[]
magicdictionary
searchword)
[2,2,3,4]
deviation
[1,2,3,2]
unmarked
k-distant
grade
points;
rewarded
math
right;
3+5*2)
submitted
(e.g
elementary
ocurrences
constrained
senders[i]
senders
messages[i]
sender
chat
bouquets
bouquet
bloomday[i]
bloomday
apples[i]
away)
rot
doctors
grows
days[i]
comparison
turbulent
arr[j]]
[arr[i]
arr[k
rating[j]
soldier
(rating[i]
teams)
rating[k])
(soldiers
-9]
[7
nums[i])
one-bit
2-bit
(10
1-bit
dollars)
order;
trucks
assortment
travel[i]
garbage[i]
garbage
responsible
histogram's
histogram
argument
rand10()
rand7()
language's
(node
0.)
graph[a]
move)
hole
graph[1]
list":
list"
"linked
nums[k]]
pairs.length
endi-1
allowedswaps
allowedswaps[i]
(3+2+5)
[3,2,5]
min-product
indices.length
pac-man
ghosts
ytarget]
[xtarget
ghost
ghosts[i]
150
floor()
floored
floor(nums[i]
presented
alike
[8,4,3,5,1]
[2,3,1,4]
sub-island
water)
grid1
grid2
sub-islands
arrk[0]
arrk[1]
f(k)
clock-wise
f(n-1)
arrk
arrk[n
3|
a[j]|
nums[li...ri]
|2
[5,2,3,7,2]
|a[i]
segmented
[2,2]
[4,4,4]
[3,4,5]
sided
rolling
bipartite?
graph[u]
bipartite
graph[v]
undirected)
(graph[u]
advantage
database
poor_query_percentage
query_name
2.75
avgs
k-radius
avgs[i]
⊕
original[i
1]:
derived[i]
original[0]
(⊕)
original[i]
"ipv4"
"ipv6"
"2001:db8:85a3:0:0:8a2e:0370:7334"
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
"x1.x2.x3.x4"
ipv4
"192.168.01.1"
"192.168.1.00"
"02001:0db8:85a3:0000:0000:8a2e:0370:7334"
queryip
"2001:0db8:85a3::8a2e:037j:7334"
"x1:x2:x3:x4:x5:x6:x7:x8"
"192.168.1.0"
xi.length
ipv6
version1
1.1
2.5.33
revision
1.0
001
revisions
version2
0.1
remainder
4)
finalsum):
(12)
finalsum
(unique
110xxxxx
1110xxxx
11110xxx
0xxxxxxx
bytes
octet
validation
1-byte
byte
10xxxxxx
utf8
n-bytes
translates
(binary)
--------------------+-----------------------------------------
utf-8
work:
unicode
rededges[i]
blueedges[j]
blueedges
rededges
servers[i]
priorities
tasks[j]
subarray)
[nums[l]
nums[r
nums[r]]
(l
nums[l
autoincrement
kitchen
j))
max(i
arr[righti]
arr[lefti]
arr[lefti
combinationlength)
combinationiterator
combinationiterator(string
combinationlength
evil
cityai
[cityai
citybi]
citybi
"wednesday"
{"sunday"
"tuesday"
"thursday"
week
"monday"
"saturday"}
"friday"
disqualification
circumvent
interactive
mountainarray.length()
mountainarray.get
submissions
mountainarr.get(index)
mountainarray
problem.)
mountainarr
mountainarray.get(k)
lon
unique)
tiv_2015
investment
latitude
policyholder's
lat
holder's
policy
(lat
who:
investments
longitude
pid
2015
policyholders
lon)
insurance
tiv_2016
policyholder
2016
numsr)
abs(numsl
heater
winter
heater's
coming!
warmed
heaters
f1
fn-2
fn-1
max(6
(1,5)
max(1+5
(a,b)
2+3
4+4)
(2,3)
(4,4)
poison
attacks!
poisoned
timeseries
hero
timeseries[i]
ashe
timer
teemo
attacks
[0,3,1,6,2,2,7]
[3,6,2,7]
deletefront()
deletelast()
(deque)
insertlast()
mycirculardeque
getrear()
insertfront()
mycirculardeque(int
double-ended
rear
getfront()
"2013-10-01"
'cancelled_by_client')
request_at
'driver'
role
driver_id
driver)
banned)
client_id
('yes'
(by
canceled
users_id
'cancelled_by_driver'
('completed'
client
unbanned
city_id
cancellation
'partner')
"2013-10-03"
'no')
('client'
evaluations
children's
cows
bulls
ask
non-bull
info:
"xayb"
"bulls"
"cows"
hint
numsdivide
widthi/heighti
widthj/heightj
interchangeable
(using
width-to-height
airports
["jfk"
itinerary
"lga"]
lexical
man
"jfk"
"lgb"]
itineraries
airline
shown)
110
111
10111
[4,2,5,3]
(after
reindexing
subsequence)
no-zero
(4-directionally)
enclaves
advised
even)
doctor's
noticed
candytype
candytype[i]
doctor
advice
mink
maxk
fixed-bound
jewels
"t
s"
town
judge)
rumor
trusts
trust[i]
trust
secretly
maxima/minima
mindistance
maxdistance]
maxima
[mindistance
minima
searched
original)
multiplying
(emp_id
out_time
employees'
1440
in_time)
emp_id
event_day
in_time
exits
worddictionary()
worddictionary
search(word)
addword(word)
dominoes[j]
dominoes.length
wraps
o(n
log(m))
[i,j]
o(m
log(n))
minutes:
routine
pictorial
thereafter
w[i]
75%)
25%)
w.length
pickindex()
sum(w)
0.75
xn)
raised
pow(x,
deleteone(int
frequencytracker
frequency):
regarding
number):
hasfrequency(int
frequencytracker():
seq.length
seq[i
lru
evict
lrucache(int
lrucache
(lru)
gaining
potentially
tokens[i]
numwanted
uselimit
labels[i]
[3,1,2]
f(n)
commonly
f(n
sub-nodes
min(root.left.val
sub-node
root.right.val)
planes
shadow
"shadow"
projection
looking
yz
zx
3-dimensional
projections
mode
mode(s)
occurred
numberofunitsperboxi]:
[numberofboxesi
numberofunitsperboxi
boxtypes
boxtypes[i]
trucksize
numberofboxesi
freed
allocator(int
block's
mid)
free(int
allocate(int
allocator
functionalities:
largest-valued
top-to-bottom
orderings
actordirector
directors
director
actor_id
(actor_id
director_id
cooperated
director_id)
actor
actors
start_date
unitssold
end_date)
purchase_date
end_date
average_price
definition:
lastdayi
lastdayi]
courses[i]
[durationi
neededtime[i]
neededtime
colorful
number:
masked
personal
masking
"+*-***-***-xxxx"
"+***-***-***-xxxx"
{'+'
"+**-***-***-xxxx"
mask
somewhere
address:
letters)
'}
0-3
10-13
"***-***-xxxx"
character)
email:
"*****"
gold
abs
sandwich
stack)
sandwiches[i]
lunch
sandwiches
cafeteria
consisiting
expected[i]
annual
(flip
"bba"
"bbabba"
"bababcba"
rungs
rung
rung)
pending
functions[i
functions[i]
available)
promisepool
resolves
5"
["7"]
evalints
"-x"
"5*c"
[1])
"b*a*c"
"a*a*b*c"
evalvars
"3*b*b"
"4*a"
alternates
["-2*a*a*a"
exist.)
["-1*a","14"]
asterisk
{"e":
terms)
"3*a*a*b"
"2x"
digits.)
"e
breaking
(given
well-formatted
3"
["e"]
1}
"a*b*c"
"-6"]
"other"
"another"
successors
"an"
1"
'/']
"12
['+'
12"
"-1
upper-left
streets
widths[0]
widths[1]
result[1]
result[0]
guessing
multiple)
non-coprime
(least
108
encodes
seq.length)
b.length
waters
(instantaneously)
capacitya
capacityb
cans
his/her
alice/bob
factorial(n
fib(n
fib
summaryranges
summarize
seen
getintervals()
summaryranges()
opponent
defeat
initialenergy
defeating
initialexperience
experience[i]
energy[i]
word:
f(string
suff
wordfilter(string[]
wordfilter
suff)
(just
buttons)
telephone
2-9
"243801"
2+4+3
8+0+3
num:
8+0+1
"243803"
path[i]
un-expired
set(key
inaccessible
setting
duration):
overwritten
get(key):
count():
nums[nums[nums[k]]]
nums[nums[k]]
{nums[k]
rains.length
lakes
floods
dry
ans.length
rains[i]
lake
rains
"())))"
sqrt
potion
spells
potions
spells[i]
potions[j]
(words)
(result)
verbal
t[i]|
|s[i]
maxcost
stone)
"push":
"pop":
(movie_id
created_at
movierating
rated
review
movie_id
top?
insensitive
"abccdef"
licenseplate
"cbca"
12c"
"caaacab"
o(log(arr.length))
heaviest
weight)
sticker
stickers
brainpoweri]
questions[i]
[pointsi
5]]:
decision
[[3
pointsi
brainpoweri
brainpower
[4,5,7]
defined:
[3,3,3]
human
visit_date
stadium
id's
widest
fixed-width
words[(i
startindex
magazine
ransomnote
ransom
thievery
realized
directly-linked
thief
himself
......"
"1221121221221121122……"
endpos
technique
bookstore
grumpy[i]
grumpy
reverses
dealing
-2.7335
truncated
dividend
quotient
range:
8.345
−
[−231
numbers[index2]
index2]
numbers[index1]
[index1
numbers.length
curr.next
multilevel
single-level
unhappy
but:
preferences[i]
preferences
f(11)
11!
convention
f(3)
x!
3!
preimage
0!
39916800
<num1>
"<num1>+<num2>"
<num2>
letter-logs:
digit-logs:
identifiers
logs:
digit-logs
space-delimited
letter-logs
identifier)
distant
barcode
barcodes
barcodes[i]
class)
(student
enrolled
zero-filled
n-queens'
"hi"
"ooo"
"h"
"lllll"
"oo"
"hiiii"
"heeellooo"
"eee"
"ll"
"hellooo"
stretchy
"helloo"
feeling
same:
expressive
"helllllooo"
"cbad"
buddy
rollmax[i]
simulator
introduced
rollmax
rowsum[i]
fulfills
colsum.length
colsum[j]
rowsum.length
rowsum
10-6
maintaining
1]|
size-2
packaging
(4-3)
size-8
boxes[j]
(4-2)
packages[i]
[4,8]
supplier
size-3
wasted
size-5
supply)
suppliers
(8-5)
size-4
bj
aj
[aj
xk
x3
bj]
-=1
arr[y]
arr[x]
punishment
deadends
'4'
wrap
'6'
'8'
slots:
'0000'
wheels
around:
ant(s)
plank
ants
nums[pivot
nums[pivot]
season
transfer
achievable
10th
tenth
(reverse):
(accelerate)
commands
*=
"aar"
nearly
sr
pixel
image[sr][sc]
image[i][j]
sc
columnnumber
nums[starti]
nums[endi]
nums[endi
nums[starti
hot
amount[1]
cold
dispenser
amount[2]
dispense
amount[0]
person_id
turn=1
person_name
turn=n
kilograms
kn
(out
face-up
totali]
totali
extrastudents
passi
beforehand
ratios
brilliant
[passi
classes[i]
uppercase)
(lowercase
(still
bean)
bean
beans
(positive
explode
(up
soldiers)
weaker
civilians
civilians)
f2.txt
fn.txt)
f1.txt(f1_content)
(f1_content
"root/d1/d2/.../dm"
f2.txt(f2_content)
f2_content
fn.txt(fn_content)"
fn_content)
(f1.txt
"directory_path/file_name.txt"
"root/d1/d2/.../dm
integer)
points:
targetx
targety
3-same-digit
prefix[i]
(cat
'c'(cat),'m'(mouse)
catjump
mouse)
mousejump
opened
picture:
subdirectory
character):
subdir1
abstracted
file2.ext
"dir/subdir2/subsubdir2/file2.ext"
new-line
subdirectories
subsubdir1
'/'s
looks
name.extension
dir
"dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext"
subsubdir2
⟶
file1.ext
explained
'\t'
subdir2
removeelement(nums
val);
actuallength;
equaling
k);
...;
sort(nums
"cab"]
["a"
priority
"2/3/4"
hoursbefore
skipping
letting
km/h)
1.4
0.6
skips
meanwhile
selects
[5,6,7,4]
[1,2,3,8]
[5,6,7,8]
hourglass
almost
deposit(int[]
denominations:
$600
200
atm()
$500
prioritizes
banknotescount)
$200
$300
$100
handed
(do
banknote
$50
deposits
rejected
banknotes
atm
withdrawing
"efcdab"
"abefcd"
"abcdef"
"efabcd"
["ab","cd","ef"]
"cdefab"
"cdabef"
"acdbef"
[s1
n2]
bolded
n1
[str2
=="abcabcabc"
m]
n1]
"abdbec"
str
[s2
[s
req_skills
people[3]
people[1]
sufficient
people[0]
team:
disappeared
(a,b,c)
o(nlog(n))
logarithmic
graphs
"4:51"
pm)
(0-59)
turnedon
"01:00"
"1:00"
watch
led
"10:2"
leds
"10:02"
(0-11)
blocks[i]
recolor
recolors
extracted
dig[i]
c2i)
[r1i
c1i)
excavate
artifact
buried
c2i]
(r1i
artifacts[i]
underneath
(r2i
mud
uncovered
artifacts
r2i
c1i
dig
glue
irregular
fifo
buffer"
enqueue(int
(first
rear()
mycircularqueue(k)
out)
"ring
benefits
mycircularqueue
front()
dequeue()
print("first");
seem
foo
mechanism
tests'
comprehensiveness
imply
mainly
print("third");
first()
third()
print("second");
second()
(yes)
compatibility
student-mentor
mentor's
question's
student's
(no)
students[i]
mentors[j]
mentor
achieved
survey
mentors
"cae"]
abc
"bce"
('b'
cae
'c')
('c'
bce
article_id
viewer_id
viewer
author_id
view_date
articles
(written
author)
authors
article
edits
k-diff
decimals
(contest_id
user_name
registered
contest_id
register
bitwise-or
robot[i]
positionj
repairs
factories
[positionj
broken;
factory[j]
reorganize
encodedtext
ciphertext
slanted
"cipher"
accessed
originaltext
transposition
pr"
"ch
depict
(your
heada
listb
skipa
lista
inputs):
retain
skipb
headb
intersected
intersectval
correctly
c1:
to_delete
routes[0]
routes[i]
initially)
edges:
traversable
bobsizes
bobsizes[j]
alicesizes
alicesizes[i]
quadtree2
grids
quad-trees
quadtree1
matrixes
hand[i]
groupsize
straights
sleeps
sleep
millis
datastream
datastream(int
consec(int
[1,0,9,2,1]
10921
up)
robot:
(move
twitter
twitter()
followeeid
followerid
unfollowing
getnewsfeed(int
userid)
unfollow(int
follow(int
posted
tweetid
followeeid)
follow/unfollow
userid
tweetid)
composes
posttweet(int
chessboard)
orthogonal
illustrated
optional
subscriptions
enables
callbacks
subscribe
referentially
subscribing
eventemitter
differences)
arguments:
emitted
unsubscribe
emitter
listeners
subscribed
emit
callback(s)
emitting
dom
node.js
[vali
nums[indexi]
indexi]
(alice's
viii
koko
slowly
bananas-per-hour
loves
bananas
j)'s
iswater
iswater[i][j]
height[i][j]
p(x)
letters:
maxlen
[4,6]
result:
bth
ath
list1's
lists:
"bulky"
categorize
"heavy"
"both"
centre
[xcentre
2d-map
ycentre]
minimized:
"first
third"
bigram
"00001"
y's
"10010"
"00010"
[1,1,0,1]
(-2)^3
(-2)^0
(-2)^2
[0]
zeros:
negabinary
uam
users'
(uam)
constituent
lastly
src2
dest
src1
sy]
ty]
blocked[i]
[tx
[sx
lastname
personid
firstname
addressid
combine
operands
min(nums[i]
fix
"!@#$%^&*()-+"
violates
prevcoursei
[prevcoursei
nextcoursei
semesters
nextcoursei:
relations[i]
nextcoursei]
semester
vertical.)
guesses[j]
lazy
says
complementary
equals:
'551'
'1351315'
['1','3','5']
'13'
divisor1
uniquecnt1
uniquecnt2
divisor2
paragraph
case-insensitive
nim
heap
friend:
sporting
clip
stitching
lasted
clips
clips[i]
positioni+1
unite
cars[i]
speedi]
speedi
repeating)
score[25]
score[1]
score[0]
(might
,'z'
(words[i]
73
-55
n's
763
-255
references
small)
parkingsystem(int
cartype
park
addcar(int
kinds:
medium
cartype)
parkingsystem
spaces:
parking
trimmed([1,2,3,3,3,4,4])
trimmed(subarray)
[3,4,3,4]
[1,2,3,3,3,4,4]
trimmed(subarray).length
trimmed([3,1,2,4,3,4])
[3,3,3,4,4].the
restart
chalk
chalk[i]
"012"
"012345":
"234"
"345"
cracking
peculiar
he/she
(down)
"facing"
irrelevant
(up)
robot's
magnitude
2maximumbit
maximumbit
nums[nums.length-1]
'o's
'x's
s[x..y]
s[i..j]
server:
resending
channel
periodically
resend
patience[i]
second(s)
replies)
patience
originating
channels
(because
arr[i-k]
arr[4]
arr[3])
arr[3]
k-increasing
arr[5]
o(log(n))
[30,40,50,60,70,90]
comparatively
kalinin
fine
skiplist:
https://en.wikipedia.org/wiki/skip_list
commons
[cc
red-black
wikimedia
skiplist
erase(int
treap
idea
by-sa
skiplists
skiplist()
3.0]
artyom
stack-like
freqstack()
freqstack
orderly
values[j]
sightseeing
spots
spot
them)
connectivity
text2
text1
'\\'
escaped
'\'
backslash
closer
|b
|a
n;
print("bar");
foobar
print("foo");
bar()
"foobar"
foo()
hercy
sunday
tuesday
putting
monday
kid
extracandies
kids
fallen
purposes
expends
upright
forces
prices[j]
distance[0]
distance[2]
distance[3]
distance[1]
succprob[i]
1e-5
[1,0,2,0,0,1]
[1,2,1,0,0,0]
firstlen
secondlen
heights[j])
min(heights[i]
heights[i+2]
heights[j-1])
max(heights[i+1]
recharged
batteries
battery
batteries[i]
purpose
anticlockwise
ring"
engraved
quest
freedom
stage
freedom"
key[i]
fallout
"12:00"
key[i]:
"road
"freedom
spelled
keyword
(next
door
trail
pressing
stage)
(nums1[i]
nums2[i])2
index's
buildings:
maxheighti]
maxheighti
18
iterating
snail(rowscount
[19
colscount
colscount)
rowscount
organised
snail
15]
transforms
removed:
cur
cur's
root's
salary":
"average
$50000
$20000
$50000]
[$20000
"low
account_id
[4,5,6,6,7,0,1,2,4,4]
[0,1,2,4,4,4,5,6,6,7]
difference)
mutated
neccesarilly
non-adjacent
sentences[i]
counts[i]
suggests
suggestions
suggested
"(let
v2
"let"
expr
scopes
vn
en
"(mult
lisp-like
syntax
"mult"
"(add
expr)"
e2)"
negative.)
mult
"add"
scope
sequentially;
v1
parentheses)
lisp
col1i)
mat[x][y]
(row2i
query[i]
col2i)
col1i
(row1i
row2i
[row1i
col2i
col2i]
row1i
salary[i]
ri)
s4
"0111001"
inverts
"011100110110001"
reverse(x)
reverse(invert(si
invert(x)
flag
primary_flag
joins
department_id
department_id)
(employee_id
boy
sweltering
seq[k
seq[0]
forward/backward
seq[1]
nums[seq[j]]
(trailing
experience_years
project_id
(project_id
employee_id)
tracked
module
overlaps
rangemodule
rangemodule()
queryrange(int
addrange(int
removerange(int
tracking
degrees)
formats
subdomain
implicitly
d1.d2.d3"
domains
rep
d1.d2"
count-paired
"rep
discuss.leetcode.com"
"discuss.leetcode.com"
"com"
d1.d2.d3
cpdomains
discuss.leetcode.com
9001
"9001
subdomains
figures
(integer
earning
"star"
"arts"}
"tars"
"arts"
(swapping
similarity:
{"tars"
"rats"
{"star"}
[preferredj
preferredj)
abs(id
minsizej]
sizei
minsizej
hotel
roomidi
sizei]
[roomidi
fat
low_fats
recyclable
subrectanglequeries
subrectangle
getvalue(int
(row,col)
newvalue
(row1,col1)
updatesubrectangle(int
newvalue)
col2
(row2,col2)
abs(nums[i])
interesting
lfucache
(due
(lfu)
lfu
lfucache(int
invalidated
accept_date
requester_id
accepter_id
(requester_id
requestaccepted
ii:
accepter_id)
4x
nums[ans[i]]
coprimes
mismatch
targetcapacity
allowed:
jug
jug2capacity
measure
pour
jugs
measurable
jug1capacity
nums2[index]
count(int
tot)
nums2.length)
findsumpairs
findsumpairs(int[]
tot
nums2)
brokenletters
spaces)
malfunctioning
properly
wrap-around
product_key
illustrates
grid[row][col]th
maxpts
probabilities
plays
outcomes
maxpts]
draws
loosely
"21"
arranging
route's
hiker
effort
hike
heights[row][col]
(rows-1
hope
columns-1)
countintervals()
countintervals
end-nodes
[wi
russian
doll
other)
envelopes
envelope
envelope's
envelopes[i]
operations.)
timej]
timej
sum)
forbidden
forbidden[i]
bug's
supervisor
empid
(a1
b1)
b2)
bn)
(a2
min(ai
"tie"
grain
wood
(x0
distance:
y0)
|y0
|x0
puppy
tokens:
"a
"puppy"
legs"
eyes
"4"
"three"]
"/b/w"
/b
"/a/x"
underlying
subfolders
marked:
"/a"
/a/x
/b/z
/b/x
subfolder
"/b"
"/one/two/three"
subfolders)
/a/z
/a/x/y
["one"
"/b/x"
/b/x/y
"two"
/a
allowedguesses
(other
helper
six-letter-long
get:
word."
"either
"you
bruteforce
method)
master.guess(word)
reasonable
master.guess
correctly."
(value
maxdoubles
ideaa
naming
ideab
space)
ideas
odds
increment()
decrement()
createcounter
code[0]
defuse
code[n-1]
bomb!
informer
out!
colums
lexographically
homogenous
(obstacle)
terminates:
streamchecker
letter)
"xyz"
"xyz"]
query(char
"axyz"
streamchecker(string[]
-nums[i]
negations
(continuous
isinfected
modeled
affected
night)
isinfected[i][j]
virus
rapidly
threatens
quarantine
wall)
abs(c1
points[r][c]
tablenumberi
orders[i]=[customernamei,tablenumberi,fooditemi]
customernamei
header
restaurant's
table”
“table”
fooditemi
“display
043
signfunc(x)
signfunc(product)
(customer_id
visited_on)
analyze
average_amount
visited_on
(customer_id)
10n
list2[j]
list1[i]
[leftj
{2,4,6}
[1,4)
{5,7}
[4,7)
[[1,4,12],[4,7,7]]
mixj
{7}
mix
segments[i]
rightj
rather
rightj)
thin
[[1,4,5],[1,7,7]]
painting[j]
painted)
12)
mixj]
comprised
necesssarily
cuisine)
highestrated(string
foodratings
cuisines
foodratings(string[]
changerating(string
highest-rated
cuisine
foods[i]
newrating)
ratings)
ratings[i]
cuisines[i]
25%
camera
cameras
warmer
soon
pure
profits[i]
ipo
capital[i]
venture
projects
"231"
labeling
"213"
"312"
listing
"132"
"321"
"(1)&()"
"()1|1"
1|0&1
1|1|0&1
operator),'('
'&'
'1','0','&'
operator),'|'
1|1|(0&0)&1
1&1
"1|1|(0&0)&1"
"(((1))|(0))"
"1|(0&(1))"
product_category
'end')
machine_id
activity_type)
process_id
(machine_id
'end'
processing_time
'start'
('start'
process_id)
interleaving
tm
t3
|n
(1-based)
passengers[j]
buses[i]
tap
taps
ranges[i]]
one-dimensional
watered
locked[i]
efficiency[i]
engineers
engineers'
tleft
substitutions
tright
biginteger)
(x1'
x2'
x1'
matrix[x][y]
y1'
y2')
coordinates[i]
arr[i-1]
shift('z')
shift()
shift('a')
shift('t')
unusuable
words[j][k]
belt
conveyor
shipped
weights)
site
recordtweet(string
endtime]
[10,10000]
chunks):
[9970,10000]
10000]
gettweetcountsperfrequency(string
"minute"
[70,129]
(86400-second
"day"
"hour"
analyzing
tweetcounts
(10000
(3600-second
tweetcounts()
(60-second
tweetname
[7210,10000]
frequencies:
[10,3609]
[3610,7209]
frequency's
[10,69]
[130,189]
firstperson
secrets
brushing
sidelengthi
landed
sidelengthi]
freezes
(negative
generation
diagonal)
births
british
john
caused
state:
mathematician
(taken
article:
horton
reproduction
wikipedia's
lives
under-population
over-population
deaths
automaton
conway
cellular
devised
1970."
life
interacts
article):
beautifully
k-values
arr[0...k-1]
sorts
[3,2,1,4]
pancake
column-wise
'conditions'
hospital
patient_id
patients
diabetes
diab1
patient_name
(on
customer_pref_delivery_date
precisely
+-----------------------------+---------+
it)
delivery_id
immediate;
people's
basically
stages:
updated)
omit
one-to-one
trimi]
kith
trimi
[ki
[0,1,4,4,5,6,7]
[4,5,6,7,0,1,4]
(strs[0][0]
strs[0][1]
strs[1][1]
(row)
strs[1][strs[1].length
strs[0][strs[0].length
(strs[1][0]
dates'
(yesterday)
weather
recorddate
progression
(lifo)
last-in-first-out
mystack
queues
shifted
diff[i]
subtracted
particularly
nums[0
gang
security[i]
duty
security[i
thieves
[7]
library's
10101
triplets[i]
cj)]
[max(ai
max(ci
triplets[j]
bj)
max(5
[max(2
aj)
max(3
zero):
max(bi
5)]
z]
solution()
shortening
shorturl
tinyurl
shorturl)
longurl)
http://tinyurl.com/4e9iak
tiny
encode(string
encode/decode
companion
longurl
decode(string
https://leetcode.com/problems/design-tinyurl
[1,0,0]
inverting
representative
representatives
seatsi]
seatsi
corporate
bookings[i]
lasti
bookings
(m+n))
unreachable
k-subarray
cornered
exclusively
sentence"
is2
a3"
this1"
this1
"is2
"this
"sentence4
sentence4
even(printnumber)
odd(printnumber)
"010203040506..."
zero()
zero(printnumber)
zeroevenodd
odd()
printnumber(7)
zeroevenodd(int
even()
endlessly
stay)
loops
rabbit
"how
rabbits
you?"
brand
(range
random_index]
random_index:
[val
x.random
unfairness
cookies[i]
mycalendar
mycalendar()
hiring
[3,2,7,7,1,2]
[3,2,7,7,2]
sessions
maxchoosableinteger
"100
re-use
desiredtotal
game"
integers?
completion
customerid
456
[123
f[i]
"123456579"
579]
f.length
f[i
(90-degree
p4
p3
angles)
rick
universe
c-137
invented
earth
stated
magnetic
discovered
morty
('sell'
stocks
'sell'
stock_name
'buy'
gain/loss
operation_day)
'buy')
operation_day
(stock_name
[2,1,3]
nums[index1]
nums[index2]
nums[indexk]
indexk
expressible
thousands
separator
thousand
(".")
forts[i]
fort
forts
max(i,j)
forts[k]
min(i,j)
sample
minimum:
[minimum
mode]
statistics:
maximum:
mode:
median:
statistics
count[k]
255]
arrlen
"ababb"
gravity
side-view
box's
obstacles'
inertia
max(nums[j]
xi)
mi]
mi
activities:
sell_date
lr
"lx"
"rxxlrxrxl"
"rx"
"xl"
"xr"
leaf-similar
count[j]
(li
points[j]
validated
filled)
(partially
testing:
splitted
"2266622"
pressedkeys
transmission
texts
texting
maxoperations
(rightward
(downward
movement)
min(10
addtext(string
deletetext(int
len)
texteditor
cursorright(int
editor
cursor.position
texteditor()
currenttext.length
cursor
cursorleft(int
(simulating
cake
horizontalcuts
horizontalcuts[i]
verticalcuts[j]
verticalcuts
32-bits
01101
voters
voter
position-one
cardpoints
restrictions:
product[j]
cashier(int
products[i]
groceries
supermarket
purchased
prices)
product)
cashier
100)
amount[j]
subtotal
(price
discount)
any)
paying
frequented
((100
getbill(int[]
(bitwise-xor)
2d-plane
yj|
|yi
them:
integers)
princess
rooms;
threats
decides
power-ups
orbs
fight
rightward
rescue
quickly
laid
imprisoned
dungeon
valiant
health
demons
2/1
irreducible
min(basket1[i],basket2[j])
basket2
basket1
rev(nums[j])
rev(123)
rev(nums[i])
rev(x)
rev(120)
[2,4,1,3,0]
[no
points]
[one
nums[k
[1,3,0,2,4]
point]
complete)
busy
k)th
load[i]
handled
busiest
(i+2)th
computational
arrival[i]
countunexpiredtokens)
expiry
(renew
expire
authentication
generate(string
currenttime
timetolive
renew(string
authenticationmanager(int
currenttime)
renewed
countunexpiredtokens(int
unexpired
timetolive)
(potentially
expires
authenticationmanager
tokenid
renews
rightchild[i]
leftchild[i]
"computer"
'e'/'a'
"computation"
buys
continuous)
durationi]
arr[2
len(arr)
participate
crimes
schemes
participates
minprofit
commit
scheme
crime
square"
contiguous)
subgrids
"magic
tweet_id
[2,3]
medianfinder()
findmedian()
medianfinder
"time
fullfill
exceeded"
k-repeating
camelcase
[1,0,3]
[-1,2,3]
mex
targetgrid[row][col]
solid
targetgrid
edge)
edgecost]
node2)
addedge(int[]
edges)
[from
shortestpath(int
edgecosti
edgecosti]
graph(int
words.txt
assume:
types[i]
marksi
[counti
marksi]
counti
indistinguishable
majoritychecker(int[]
majoritychecker
threshold)
xi+2
crashed
memory)
faulty
memory2crash]
memory1crash
memory2crash
[crashtime
incremental
leak
memory1
consumes
crashes
crashtime
memory2
smallestinfiniteset
smallestinfiniteset()
popsmallest()
addback(int
tic-tac-toe:
monotonic
1-d
(mhts)
mhts'
min(h))
editors
backspacing
tasks[i])
pills
requirement
task's
pill
requiring
workers[j]
haystack
needle
options:
"dv"
"dva"
secondary
creators
[creatori
creator[i]
creator's
creatori
ids[i]
creator
views[i]
platform
idi]
popularity
length(word[i])
length(word[j])
deathi
[birthi
deathi]
alive
"abc??"
stamp
"?????"
left-most
"?abc?"
target.length
"??abc"
"abcba"
stamped
directioni]
directioni
(subject_id
subject_id
teacher_id
taught
dept_id
teaches
dept_id)
nestedlist
pseudocode:
nestedlist)
nestediterator(list<nestedinteger>
iterator.hasnext()
nestediterator
iterator.next()
infection
color-position
('r'
rod
rings:
"r3g2b1"
rings
'b')
installation
welded
billboard
weld
steel
03
additive
array.filter
truthy
runningsum[i]
sum(nums[0]…nums[i])
numones
numzeros
contains:
numzeroes
numnegones
-1s
translation
translated
img2
translate
img1
|nums1[i]
nums2[i]|
candle
"*||**|"
candles
plates
"||**||**|*"
hasnext
peekingiterator(iterator<int>
peeking
peekingiterator
accounts[i][0]
accounts[i]
traverses
node.right
node.left
array.flat
flattening
a's)
abcde
aacabb
bbcbaa
aecdb
myhashset
hashset
add(key)
contains(key)
((r
c))
signals
"ccjjc"
"abab"
'j')
"t"
countuniquechars(t)
countuniquechars(s)
"l"
"d"
timeout
cancelfn
args
(n-1-i)th
twin
twins
p[i+1]
(0,1,2.....,2^n
p[0]
p[i]
p[2^n
3001
112
1100
deci-binary
withdrawn
account2
(transfer
balance)
deposit(int
money)
account1
automate
number(s)
balance[i]
bank(long[]
withdraw)
transfer(int
permuting
greatness
parents[x]
nodei
[nodei
changed.)
get(string
timestamp_prev
timestamp)
timemap
time-based
set(string
timemap()
statements[i][i]
person:
statements
persons:
statements[i][j]
truth
numcarpets
floor[i]
floor:
carpets
…
l2
ln
l0
l1
→
[1,3,3]
ingredients[i]
recipes[i]
recipes
supplies
recipe
taxes
[upperi
percent1
percent2
upper1
upperi
brackets.length)
earned
percenti]
percenti
brackets[i]
taxed
percent0
tax
upperi-1
upper0
upper2
2⌋
scenic
querying
supports:
sortracker
ordinal
invocation)
worst
add(string
get()
sortracker()
attractiveness
query)
invoked
queried
leap
31]
arrivealice
arrivebob
5-character
[31
business
31
leavebob
leavealice
"mm-dd"
rome
modulo)
hash(s
(val(s[0])
hashvalue
val('z')
val(s[1])
val('a')
p0
pk-1)
hash(sub
val(s[k-1])
val(s[i])
numsleft
numsright
divisions
numsright:
completeness
bakes
donut
batchsize
donuts
served
batches
[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
"-.-."
"-.-..--..."
"cab"
".-"
international
transformations
morse
"-..."
parent[0]
depth-first
(dfs)
nestedinteger
repeatlimit
repeatlimitedstring
min(a.length
b.length)
shuffle()
observation
went
observations
fortunately
listen
music
boredom
playlist
playlists
no-adjacent-flowers
flowerbed
overridden
mapsum()
key-val
pairs'
mapsum
sum(string
?'s
conversions
ans[i
(s)
(p)
wildcard
sequence)
arr[k]|
(arr[i]
arr[k])
arr[j]|
erect
enclosed
fence
expensive
well-fenced
[pj
qj
disi]
existence
edgelist
edgelist[i]
disi
dislikes
dislike
bipartition
dislikes[i]
unnecessary
1][0]
grid[i][n
grid[0][0]
strict
farm
25]
multithreaded
fizz()
fizzbuzz(int
buzz()
d:
number()
fizz(printfizz)
fizzbuzz
printbuzz
printfizz
number(printnumber)
printfizzbuzz
fizzbuzz(printfizzbuzz)
buzz(printbuzz)
fizzbuzz()
"zxcvbnm"
american
"asdfghjkl"
"qwertyuiop"
keyboard:
classroom
cheating
most-significant-bit
[1,0,1]
x0
least-significant-bit)
univalue
player2
player1
bowling
pins
2xi
holes
90-degree
isconnected
isconnected[i][j]
provinces
province
targetwords
startwords
"cbda"
"acbd"
"bacd"
beneath
"bac"
pleasing
transition
three-letter
patterns
aesthetically
maximizing
true/false
confuse
'f's
trues
answerkey[i]
answerkey
falses
confusion
(multiple
't's
k-beauty
"balloon"
recurring
numerator
enclose
(i,j)
s[j]=
_.chunk
nums1:
"8"
"34"
"a123bc34d8ef34"
34"
34
space:
fertile
farmland
apex
bottommost
farmer
pyramidal
pyramidal)
pyramids
barren
"applema"
made-up
latin
vowel)
latin"
"oatgma"
"ma"
"apple"
goat
latin.)
"goat"
"goat
consonant
-7
0:
results:
pick)
pre-defined
guess(int
instructions:
"r":
"l":
"g":
pos1y
pos2x
pos1v
pos1z
pos2y
pos2v
pos1x
pos2z
[portsi
portscount
portsi
maxboxes
loaded
delivered
ports
weightsi
storage
deliver
maxweight
delivering
pattern[1]
pattern[0]
last)
grades
pops
customstack
maxsize)
inc(int
customstack(int
69
switching
valuediff
indexdiff
[1,2,2,3,3,2,1,1]
neighborhoods
{1,1}]
[{1}
houses[i]:
cost[i][j]:
{2}
{2,2}
{3,3}
neighborhood
++x
x--
x++
--x
bishop)
(r-1
(rooks
bishops)
1-based
c-1)
(rook
obstacles[2]
sideway
(ranging
lane
lanes
adjacent)
3000000
gdp
bigint
twenty-five
countries
km2)
25000000)
continent
(case-insensitive)
handles
capitalization:
mistakes:
exhausted
rle
rle)
rleiterator
[3,8,2,5]
rleiterator(int[]
encoding[i
[3,8,0,9,2,5]
[2,8,1,8,2,5]
exhausts
[8,8,8,5,5]
exhaust
encoding[i]
encoded)
powerful
[1,5,9]
nums[i][i]
[3,5,7]
nums[i][nums.length
index-0)
uniques
(only
global
inversions
poeple[i]
server-to-server
remap
remapping
d1
weekly
danny
mittal
d2
mittal"
congratulate
326
sneakily
"danny
remaps
h[i])
i+1
(h[i+1]
building's
obj1
[obj1
obj2
value]
bij
sized
max(bik)
nums[i...j]
numarrows
bk
shoots
bobarrows
archery
scoring
ak
alicearrows
((nums[i]
xor-beauty
nums[k])
xoring
cousins'
drink
numbottles
numexchange
bottles
bottle
drinking
"red"
commission
commission_rate
hire_date
sales_id
com_id
salesperson
+-----------------+---------+
alongside
salespersons
|x2
(startx
(x2i
specialroads
y2i)
y1i)
[targetx
|y2
[x1i
targety]
y1i
y2i
specialroads[i]
(x1i
starty)
[startx
starty]
x2i
costi]
(s
s[removable[i]]
removable
removable.length)
follower_id)
follower_id
followers
follower
inventory
weirdly
customer)
diminishing-valued
inventory[i]
nums2[i]2
(type
nums1[i]2
nums2[k]
nums1[k]
e
o
x2]
maxmoves
graph")
"original
[xcnti
(cnti
subdivide
xcnti
[xcnti-1
x1]
xcnti]
cnti]
x3]
[x2
cnti
subdivided
[[1,2,3],[4,5,0]]
[starttimei
grass
fire
stayed
safehouse
washing
dresses
dress
locations[i]
finish)
locations.length
locations[j]|
|locations[i]
nums[b]
nums[d]]
[nums[a]
nums[a]
nums[c]
nums[d]
cuts[i]
cut)
marble
marbles
weights[j]
lowest)
pricing
col]
rank)
highest-ranked
(shorter
[row
(highest
range)
(lower
(smaller
"+2-1"
variance
odd-valued
ci
cubic
cube
storeroom
touching
boxes:
powers[j]
a[l],a[l+1],...,a[r]
(l,r)
answers[j]
incident(a
answers.length
multiplicand
underscore
e-mail
'@leetcode.com'
e-mails
(upper
100%
abbreviate
12345678987600000
1234567
<pre>
abbreviating
<pre>...<suf>
"12345...89876e5"
"<pre>...<suf>ec"
1234567654321
<suf>
12345...54321
546
mailboxes
mailbox
houses[i]
otherwise:
baseball
operations[i]
gift)
candies)
num_people
(indexing
i=0
i=queries.length-1)
p=[1,2,3,...,m]
n*n
(n-1
n-2)
horizontal/vertical
35ms
debounce
recieve
95ms
_.debounce()
150ms
cancelled
135ms
debounced
(city
narrow
reorienting
transport
orient
ministry
7/3
division's
10/2
'.')
[entrancerow
'+')
entrancecol]
[homerow
(homerow
homecoming
colcosts
homepos
rowcosts[r]
homecol)
colcosts[c]
rowcosts
homecol]
incurs
"())(())))"
insertions
"())"
'))'
")()"
"(())())))"
devise
jobs[i]
"enjoyyourcoffee"
coffee"
"enjoy
inequality
"$1e5"
"$6"
"$"
"100"
"$100"
discount%
"$23"
'$'
preceded
graph:
[0,1,5,6]
|j
i|
[0,1,9,0]
2d-array
10-letter-long
nucleotides
studying
dna
"acgaattccg"
(substrings)
useful
n-digits
comprising
well-spaced
employeeuni
unique_id)
unique_id
descendant)
trimming
"cxbae"
"cabxe"
"cabxbae"
"ba"
subpath
yielding
encounters
step(int
awaits
instructs
"west"
"west")
retries
getpos()
("north"
(width
"north"
getdir()
robot(int
"south"
"east"
[cj
dj
-1.0
contradiction
dj]
replacements
[5,6,7]
[5,2,4,7]
relevant
grid[xi][yi]
mines[i]
arms
prevroom[i]
colony
prevroom[0]
prevroom
higher[i]
lower[i]
belonged
remembers
dayi
plotting
[dayi
stockprices[i]
chart
stockprices
index[i]
mall
visit_id
transaction_id
tromino
tilings
tiles:
beautyi]
namely
bits:
arithmetic:
nums[l[i]+1]
[l[i]
sequences:
nums[l[i]]
r[i]]
nums[r[i]]
s[1]
-9
j's
snap_id)
snap()
set(index
snapshotarray(int
snap_id:
array-like
get(index
snap_id
snapshotarray
snapshot
harmonious
gate
amount[i]
price/reward
cash
careful
"aabd"
lcp[i][j]
word[i,n-1]
"aaca"
word[j,n-1]
lcp
divisors:
108]
12321
n-repeated
nums[n]
-∞
nums[-1]
peaks
out-of-order
(signed
unsigned)
superstring
difference[i]
equal-length
words[i][j+1]
difference[i][j]
words[i][j]
unvisited
bottomright[r][c]
bottomright[r][c]|
answer[r][c]
topleft[r][c]
|topleft[r][c]
|a.val
b.val|
friends[i]
watched
general
watchedvideos
(increasing)
watchedvideos[i]
bookshelf
thickness
shelf
books
bookcase
shelfwidth
books[i]
[thicknessi
shelves
hamsters[i]
hamsters
hamster
ramp
"5489355412"
"5489355214"
"5489355421"
smallest-valued
"5489355142":
"5489355241"
care
services
delivery(i)
options
pickup(i)
pickup/delivery
additions
sx
(tx
tx
sy)
ty)
(sx
sy
ty
mat[4][2]
mat[2][0]
mat[3][1]
bobvalues
stone's
alicevalues[i]
bobvalues[i]
differently
other's
alicevalues
ret[i]
ret
[valuei
items1
items2
quiet
richer
logically
quiet[y])
loud
richer[i]
rich
quiet[i]
quietness
approved
"declined"]
["approved"
trans_date
minsize
maxletters
reshaped
matlab
wanted
matrix;
reshape
row-traversing
handy
[6,7,4,1]
[6,1,7,4,1]:
[6,1,7,4]
[6,1,4,1]
[even
odd]
lo
(lo
[lo
chars:
group's
k-concatenation
fixed-length
incurred
nums[2]
nums[3]
abs(x1
abs(y1
x2)
grid:
circles[i]
circles
lattice
"aca"
"abaca"
sn)
"ca"
"(name)is(age)yearsold"
marks)
keyi
"age"
knowledge[i]
[keyi
"?"
knowledge
repetitively:
comma
arraywrapper
features:
wrapper
string()
incompatibility
subset's
incompatibilities
10000
transacted_on
trans_id
there)
(impossible
storekeeper
,nums[ik])
min(nums[i0]
,ik
,nums[ik])2
max(nums[i0]
heroes
[costi
cashbacki]
cashbacki
appeal
"abbca"
bottom-up
solver
3x3
flow
atlantic
oceans
island's
pacific
ocean
heights[r][c]
cell's
preserve
positives
+y
+x
commands:
9:
-2:
-y
today
[7,34,1,2]
stockspanner
span
stock's
stockspanner()
backward)
today's
[7,2,1,2]
quotes
reservedseats
four-person
[3,3]
allocation
exceptional
reservedseats[i]
[3,8]
aisle
[3,4])
islefti]
islefti
descriptions[i]
childi
parenti
descriptions
[parenti
tops
tops[i]
bottoms[i]
bottoms
tile.)
approach;
justification
justified
greedy
left-justified
maxwidth
pack
columns)
separates
battleships)
battleship
battleships
lonely
hidden[i]
differences[i]
hidden[i
returnedarray[i]
array.map
"pending"
toe
tic-tac-toe)
"draw"
tic
tac
object.keys()
inludes
json.stringify
routine:
construct(a)
a[i
construct([a[0]
construct([a[i
construct(b)
construct(a))
(root
1]])
compile
(assuming
supersequence
getmaxkey()
o`one
inc(string
allone
strings'
dec(string
allone()
getminkey()
jobdifficulty
dependent
difficulties
jobdifficulty[i]
[indexi
indexi
(has
nums[j
biginteger
sumsecond
sumfirst
independently;
influence
totaltrips
successively;
operates
[1,3,5,7,9]
[7,7,7,7]
[3,-1,-5,-9]
queryindices
queryindices[i]
querycharacters[i]
lengths[i]
querycharacters
destroying
asteroids[i]
planet
wisely
sells
tastiness
objects.)
listnode
serializations
urgent
manager[headid]
manager[i]
informtime[i]
news)
subordination
headid
inform
sum(nums2)
nums2[left...right]
sum(nums1)
[11,2,3,14,15]
nums1[left...right]
spliced
sum(arr)
[11,12,13,14,15]
[1,12,13,4,5]
pref[i]
"-123.456e789"]
"-90e3"
"53.5e93"
"1a"
"+3.14"
"+6e-1"
"e3"
"3e+7"
order):
"-0.1"
"4."
"--6"
"95a54e53"]
["2"
"0089"
"-.9"
"1e"
(optional)
"99e2.5"
numbers:
"-+3"
"2e10"
'-')
word1[i]
word2.length
word1.length
word2[j]
divisors[i]
wealth
accounts[i][j]
nums[(i
k-similar
uni-value
gifts
y2)2)
in)
x2)2
(y1
√(x1
('h'
(actual
substitution
alphabet)
substituted
appearance
boy"
heightmap
kind":
case-sensitive
"three
"pair":
suits
card":
"flush":
suits[i]
suit
worst:
ranks[i]
poker
variation
zuma
turn:
solution"
"no
solutions"
"infinite
"x=#value"
releasetimes[i
keyspressed[i]
keypresses
releasetimes[0]
keypad
tester
released
keypress
keyspressed
releasetimes
releasetimes[i]
[ni
ni
alex
reformatting
firstly
fish
fisher
[xking
queens[i]
ad
yqueeni]
yking]
[xqueeni
corridor
decorative
dividers
divider
bigger
traversing-order
circularly
prior
younger
conflicts
basketball
effect:
voyage
uni-valued
univalued
[2,5,6]
totals
mutable
ops[i]
ops
m[x][y]
nottobe(val)
"not
expect
helps
tobe(val)
equal"
"equal"
developers
consecutive)
unguarded
walls[j]
guard
obstructed
guards[i]
indices(0-indexed)
(2nd
(1st
even-numbered
mutating
to)
change[num[i]])
change[d]
cost[i][j]
size2
size1
1-st(lower)
2-row
colsum[i]
0-th(upper)
column(0-indexed)
pickrightfork
philosopher
think
philosophers
discipline
thinking
wikipedia.org
pickleftfork
spaghetti
silent
putrightfork)
wantstoeat(philosopher
putrightfork
forks
philosophers'
asking
behaviour
algorithm)
stomach
demand
bowls
space;
putleftfork
dining
starve;
concurrent
fork
solitaire
streak
abs(arr[i]
splicing
[1,1]
minutestotest
pigs
minutestodie
survive
(poor)
consume
poisonous
nums[z])
(nums[w]
nums[x])
(nums[y]
tostring()
all()
bitset(int
fix(int
compactly
unfix(int
one()
bitset
coincide
size)
idx)
tn+1
tn+3
tribonacci
t0
tn
tn+2
n-th
z1
distancetolastnode(zi+1)
z0
zk]
z2
distancetolastnode(x)
zk
zi+1
[z0
zi
distancetolastnode(zi)
105]
pangram
boat
boats
integer-sided
bring
arr[banned[i]]
banned[i]
rj
rj]
scrambled
scramble
10|
pre-existing
|3
|7
powered
5|
government
sanctioned
_.isequal()
o2
o1
2[4]
k[encoded_string]
valid;
3a
encoded_string
capitalize
capitalized
capitalization
unix-style
'//')
'...'
'..')
'/')
simplify
refers
'..'
canonical
slash
clears
browserhistory(string
homepage)
forwarding
browserhistory
forward(int
steps)
url)
homepage
back(int
visit(string
"abdc"
words[i
"dacb"
if)
node.)
(red
{c1
cnumselect}
numselect
0.1)
tax.callpolyfill({item:
salad
tax(price
tax(10
totalcost
11"
function.call
appropriately
"salad"}
taxrate)
enhance
${totalcost}`);
taxrate);
console.log(`the
callpolyfill
${this.item}
age[y]
&&
age[x]
|arr1[i]-arr2[j]|
players[i]
trainer
trainer's
matchings
trainers[j]
trainers
tilt
keycard
[keyname[i]
key-card
key-cards
saves
"09:49"
"10:00"
keytime
"22:51"
one-hour
emits
"23:51"
"23:52"
doors
alert
"11:00"
keytime[i]]
keyname
leftsum[i]
|leftsum[i]
rightsum[i]|
rightsum[i]
stampheight
stampwidth
(occupied)
array:
"leaf":
p_id
"root":
"inner":
item_id
buyer
join_date
favorite_brand
item_brand
xcenter
ycenter)
(radius
gregorian
intlength
queries[i]th
judgement
"boring"
genre
boring
description
average(b)
average(arr)
average(a)
(similar
c/c++'s
"0032"
clamp
clamped
32)
atoi
myatoi(string
(atoi)
n))
o(log(m
strs[n
strs[1]
strs[2]
strs[0]
filesystem
"/leetcode/problems"
"/"
sub-folder
folder[i]
sub-folders
"/leetcode"
folder[j]
understand
quad
loseri]
defeated
[winneri
matches[i]
loseri
winneri
losses
(which
queuing
instantaneously)
numslots
maxlocal[i][j]
maxlocal
exchanges
addall
multall
append(val)
fancy
fancy()
multall(m)
addall(inc)
multiplies
getindex(idx)
inc
(alphanumeric
extremely
pow
upload(int
uploads
upload
video)
luprefix(int
luprefix
longest()
"upload"
uploaded
executives
seeing
earners
earns
earner
newflowers
caretaker
bombs
detonate
bombs[i]
detonated
felt
"ababc"
s1's
[1,2,4,7,8,9]
[[1,3]
[8,9]]
[2,3,4,8,9]
[3,7]
logins
alter
left-out
k-group
sectors
rounds[i
rounds[i]
sector
rounds[0]
marathon
rounds[1]
circulate
punctuation)
truncating
(pronounced
trie()
autocomplete
startswith(string
word)
(prefix
dataset
"try")
trie
meals
deliciousness[i]
deliciousness
meal
subsequences:
subsequence2
subsequence1
tape
taken:
skill[i]
chemistry
minjump
maxjump
leavetimei
leavetimei]
mappings[i]
[oldi
mappings
newi]
newi
oldi
signup
confirming
confirmed
confirmations
requested
'confirmed'
confirmation
('confirmed'
'timeout')
('timeout')
expired
('confirmed')
signups
"world"
universal
"warrior"
"wrr"
solution(double
x_center
(x_center
randpoint()
y_center)
randpoint
you:
#1
#2
trios
trio
columntitle
2019-08-16
change_date
new_price
change_date)
[1,2,3,1,2]
type-2:
type-2
type-1:
x-matrix
startat
normalized
microwave
cooking
99
finger
targetseconds
generic
(three
interprets
fatigue
0954
pushcost
normalizes
54
81
(four
labelling
fifth,...)
sixth,...)
(second
colors:
height[i])
slant
01:30
00:45
logintime
23:45
logout
logouttime
seventh
midnight
00:15
32
instructions[i]
(elements
[1,2,3,3,5]
[1,2,3,5]
min(2
favoritecompanies
companies
favorites
favoritecompanies[i]
destinations
roll:
min(curr
1][0])
style
boustrophedon
board[n
[curr
n2)]
snakes
[[-1,4],[-1,3]]
couples
couple
(2n
switch
row[i]
holds:
usage
capitals
"usa"
"google"
myhashmap
myhashmap()
(key
hashmap
segments)
prize
prizepositions
prizepositions[i]
prizes
(please
[b]
(b)
balls[i]
carefully)
[a]
[x1,x2,...,xn,y1,y2,...,yn]
[x1,y1,x2,y2,...,xn,yn]
pick(int
toggle
(turning
f(int
public:
i.e.:
with)
callable
y);
f(x
customfunction
f(x,y)
};
implementations
findsolution
function_id
monotonically
nums3[k]
nums4
nums4[l]
dinner
popatstack(int
dinnerplates(int
dinnerplates
defending
monsters
charged
weapon
monster
charge.the
termination
silhouette
geometric
absolutely
points"
5],[7
5],[11
such:
skyline's
3],[4
acceptable;
grounded
heighti]:
[...,[2
buildings[i]
[[x1,y1],[x2,y2],...]
7],...]
"key
collectively
5],[12
apple;
hasapple
hasapple[i]
unreserve(int
unreserves
seatnumber)
manage
fetches
reservation
seatmanager(int
unreserved
reserves
smallest-numbered
seatnumber
seatmanager
reserve()
myqueue
(fifo)
report:
shops
search:
rents
list<list<integer>>
rental
[shopi
unrented
res[j]
moviej]
entries[i]
[shopj
shopj
moviej
drop:
entries)
id)
movierentingsystem(int
rent
renting
report()
searching
movie)
movierentingsystem
moviei
rent:
rent(int
generating
shopi
drop(int
planttime[i]
growtime[i]
each:
bloomed
planttime
blooming
seeds
growtime
blooms
[actuali
minimumi]:
12]
require
actuali
minimumi
"abcdefg"
"baggage"
(does
"based"
"faced"
puzzles[i]
puzzle)
"cabbage"
"beefed"
(includes
min(b)
2));
promise.catch(console.log);
t=50ms
object)
t=100ms
100));
caught
function*
promise]
responsibility
settimeout(cancel
"cancelled"
promise(resolve
[cancel
=>
yielded
1;
cancellable(tasks());
rejects
50);
settimeout(resolve
tasks()
cancel()
resolve(2
layer:
cyclically
lengthi
heightj
cuboids[i]
lengthj
cuboids
cuboid's
widthi
cuboid
widthj
8-directionally
corner)
0))
integer;
substrings:
firstlist[i]
[startj
secondlist
intersections
firstlist
secondlist[j]
endj]
aaa
bbb
'bbb'
'aaa'
"abcdefghijklmnop"
["ab"
arbitrarily
"ab121p"
"p"]
"cdefghijklmn"
event1
events)
endtime1]
[starttime2
endtime2]
event2
[starttime1
(length
"aabccc"
(repeated
run)
"c3"
"a2bc3"
"a2"
s2[j]
"y"
means:
"x"
horizontally/vertically
diagonally)
"lakes"
isn't
detectsquares
perpendicular
add(int[]
detectsquares()
point)
count(int[]
107
commute
depart
1.5
trains
kilometers)
transactions:
bishops
pawns
rook's
pawn
captures
"110100010"
haven’t
startj
citizens
senior
gender
formation
sentence2
"my
sentence1
is"
jane"
"jane"
similarity
subroot
destroy
seeding
targets
"distance"
travelled_distance
travellers
extroverts
living
120
introvertscount
introverts
extrovert)
happiness
extrovertscount
people:
(introvert
b1
losers
closes
incur
'y':
gain[i]
biker
altitude
altitudes
topping
toppingcosts[i]
flavors
dessert:
basecosts[i]
toppings
dessert
toppingcosts
flavor
basecosts
fluctuation
stockprice
nature
maximum()
current()
minimum()
correcting
worse
stockprice()
volatile
sex
temporary
notepad
screen
paste:
paste
all:
square-free
notation
operand
polish
[[-10]
-10
[12]]
val2)
gcd(val1
validly
underground
getaveragetime(string
checkout(int
railway
startstation
getaveragetime
undergroundsystem
stationname
endstation)
endstation
checkin(int
checkout
checkin
chronological
cannot)
chip
chips
side-length
nextcoursej]
[prevcoursej
relations[j]
graph)
relationship)
months
nextcoursej
prevcoursej
(prerequisite
[-3
[-7
stronger
((5
((n
arr[m]
[6
11]
22]
((4
kthlargest(int
kthlargest
rowindexth
rowindex
(wi
ones)
unmodified
109]
yi2]
rectangle[i]
(xi1
yi1
(xi2
yi2)
xi2
[xi1
yi1)
(0-based)
nextlargest
reduction
[nums1
nums2]
ensures
[1,4,1,2]
[1,4,3,1,2]
array.last()
prototype
mutation
startgene
"aaccggtt"
"aaccggta"
investigate
mutations
8-character
gene
endgene
bumper
fleets
slower
catches
slow
search_cost
comparisons
cool"
exercises
"i
soul"
"eetcode"
delightful"
"leetcode
sound
leetcode"
3-digit
312
(black)
growing
graphical
(red)
consuming
two’s
subordinates'
employees[i].importance
employees[i].subordinates
employees[i].id
pencil
cost1
pencils
utensil
pens
pen
cost2
rearrangements
reordering
(strictly)
well-performing
non-tiring
tiring
nums2[1])
(nums1[n
nums2[0])
nums2[n
(nums1[0]
(nums1[1]
fueli
refuel
startfuel
transferring
mile
fueli]
refueling
chocolates
debt
cells[i]
vacant
prison
above)
s(i
onescolj
zeroscolj
onesrowi
diff[i][j]
zerosrowi
perm1[i]
squareful
perm2[i]
perm1
perm2
7-day
costs[2]
planned
costs[0]
1-day
30-day
costs[1]
365
days:
exams
score[i][j]
sumregion(int
nummatrix
sumregion
col1)
(row2
(row1
nummatrix(int[][]
col2)
(k)
k-length
needs[i]
special[i][n]
special[i][j]
offer
a.length]
b[(i+x)
pattern[i]
num[i
-k
reconstruction
(queue[0]
kj]
queue[j]
[hj
attributes
secondi]
secondi
transitive
languages[i]
teach
friendship
friendships
friendships[i]
infrastructure
states
eventual
terminal
removequeries
removequeries[i]
"abbxxxxzyy"
"yy"
[3,6]
"z"
"bb"
there're
competes
(ascending
against
firstplayer
secondplayer
winners
(player
compete
(target)
(candidates)
candidate
x-values
super-palindrome
super-palindromes
nums[ik]
nums[i2]
nums[i0]
nums[l]
quadruplet
"3951"
"0190"
"3456"
s:
"0158"
"6345"
cycled
non-prime
minlength
(top
crossword
qualities
towers
garbled
qi
(cx
cy)
towers[i]
⌊val⌋
d)⌋
cy]
⌊qi
[cx
qi]
"0.011.255.245"
"192.168.1.312"
"0.1.2.201"
croaks
croaking
croakoffrogs
printing
frogs
croak
"croak"
mycalendarthree()
k-booking
mycalendarthree
graph[i][j])
validator
wrapped
tags
</
unmatched
tag_content
invalid)
]]>
<![cdata[cdata_content]]>
cdata_content
snippet
</tag_name>
<tag_name>
unbalanced
<tag_name>tag_content</tag_name>
cdata
note1)
<![cdata[
tag_name
issue
forbid
"abe"
characters'
(mst)
pseudo-critical
msts
mst
graph's
molecules
bond
enforces
barriers
words:
releasehydrogen
oxygen
releaseoxygen
hydrogen
explicitly;
h2o
synchronization
sets;
worry
barrier
bind
wi)
(ui
early
4-directional
non-obstacle
walks
["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]
month)
revenue
enddayi]
stars
non-star
"1001"
goal)
abs(sum
'e's
'i's
"aeiou"
"aeoiu"
'a's
"uaeio"
"aaaaaaeiiiioou"
"aaaeeeooo"
between)
"31st"}
2100]
"sep"
"feb"
yyyy
{"1st"
"3rd"
"4th"
"dec"}
"30th"
"nov"
"jul"
[1900
"oct"
"mar"
dd
"2nd"
"may"
"apr"
{"jan"
"jun"
"aug"
and)
blacklisted
blacklist
blacklist)
2i
[fi
changetime
tires
tire
laps
fi
numlaps
tires[i]
ri(x-1)
lap
group)
"xyzz"
"zzxy"
special-equivalent
"xzzy"
aware
forget
discovering
discovers
...})
{a
"abefg"
{"ac","ad","bc","bd"}
r(e2)
e2)
"abefh"
ek
r(expr)
{"a"}
r(x)
r("a{b,c}{d,e}f{g,h}")
{"abdfg"
r({e1
r(e1)
concatenations
{"w"}
brace
understood
"acdfh"
r(e1
∪
examples:
(notice
singleton
"acefh"}
r(e2)}
"acefg"
comma-delimited
grammar:
"acdfg"
"abdfh"
{x}
r("{a,b}{c,d}")
r("{a,b,c}")
r("{{a,b},{b,c}}")
r("w")
{"a","b","c"}
r("a")
solution(listnode
sleft
sright
class's
superclass
chairs
targetfriend
leavingi]
chair
inserter
cbtinserter
get_root()
cbtinserter(treenode
cj)
a2|
requirement:
a4|
an]
|a2
an|]
[a1
[|a1
|a3
|an-1
a3|
runningcost
centennial
scenario
boardingcost
gondola
gondolas
"1:end:2"
stack:
"0:start:3"
"{function_id}:{"start"
"end"}:{timestamp}"
exclusive
receptor
reflection
mirrors
ray
southwest
receptors
[1,0,2,1]
5%
bitwise-and
?)
(arr[0]
popping
popmiddle()
frontmiddleback
pushback(int
frontmiddleback()
pushfront(int
popfront()
frontmost
pushmiddle(int
popback()
carried
encrypter(char[]
decryption
word2)
encrypter
encrypts
decrypt(string
encrypted
encryption
word1)
encrypt(string
encrypt
sublists
decompressed
[freq
decompress
[nums[2*i]
nums[2*i+1]]
sublist
statuses
4:
buttons
functionality
3k
redirects
redirect
boards
stuck
"v"
suffix)
suffixes
"<a/b>"
assumes
frog's
units)
result[j]
requests[j
requests[j]
non-repeating
exempted
smooth
descent
'['
'}'
'{'
']'
array-form
1321
[1,3,2,1]
max(nums[2
min(nums[2
o(n2)
pizzas
symmetric
center)
tipi
tipi]
earnings
requesting
willing
tip
rides[i]
time-points
zero-based
nums[nums[i]]
w]
web
developer
page's
[l
page’s
wallet
assorted
partner_id
dailysales
partner
lead_id
partners
make_name
partner_id's
lead_id's
date_id
namei
"type"
namei]
rulekey
"color"
rulevalue
ordertypei
order's
orders[i+1]
happens:
backlog
orders[i]
ordertypei]
'v'
destination:
"hvhvh"
(go
providing
"hhhvv"
isomorphic
[beginword
sk]
&lt;
&gt;
&frasl;
sign:
mark:
html
entities
&apos;
slash:
ampersand:
&quot;
entity
&amp;
reports_to
anyone
(reports_to
null)
128
self-dividing
rangefreqquery(int[]
rangefreqquery
unordered
list<node>
neighbors;
(int)
(clone)
(list[node])
min(n
k)]
stones[j]|
|stones[i]
stones[j]
treenode.left
recovered
findelements
treenode.right
treenode.right.val
treenode.val
findelements(treenode*
treenode.left.val
recovers
oldest
["king"
successor(x's
(alice
successor(king
curorder):
"jack"
"jack"]
name)
gave
getinheritanceorder()
successor(bob
birth(string
throneinheritance
successor(x
throne
death(string
well-defined
"bob"]
childname)
curorder:
childname
kingname)
curorder)
"alice"]
curorder
throneinheritance(string
born
["king"]
grandchildren
successor(jack
who's
inheritance
successor(alice
jack
bob)
son
parentname
"c.,"
('-')
"cd!"
')
("a-b"
hyphen
hyphens
("ab,"
('
"ab-"
punctuation
"-ab"
',')
('!'
"a!b"
patching
patches
add/patch
subexpr2
parsing
subexpr1
subexprn
'|(subexpr1
subexpr
'&(subexpr1
shapes:
inner
'!(subexpr)'
subexprn)'
**
exponent
0.5)
sqrt(x)
python
reversed1
12300
retained
reversal
2021
reversed2
1202
"./"
folder)
"x/"
exist)
crawler
"../"
subtracting
2x
ay2)
(ax2
(bx1
rectilinear
(bx2
(ax1
by1)
ay1)
by2)
bottom)
rcenter
c2|
ccenter)
ccenter
(r2
|r1
r2|
|c1
(rcenter
cheeseslices
total_small]
[total_jumbo
tomatoslices
burger:
tomato
jumbo
burgers
multipliers[0]
multipliers[1]
multipliers
multipliers[i]
pruning
highlimit
lowlimit
nummoves
nummoves)
amounti]
depicts
harvest
harvested
less-than-or-equal-to
(exclusive)
fractions
echo
groups)
chargetimes
runningcosts
max(chargetimes)
sum(runningcosts)
chargetimes[i]
runningcosts[i]
charge
minstack()
minstack
retrieving
getmin()
optionally
(contiguous
insufficient
rid
conductor
illegal
s[s.length
goods
s[0])
pictured
glasses
100th
floor.)
poured
excess
0-indexed.)
pouring
champagne
"fghij"
moves:
them.)
'!'
"klmno"
board;
"z"]
board[0][0]
"pqrst"
["abcde"
"uvwxy"
(xxx)
xxx-xxxx
digit)
xxx-xxx-xxxx
one-liner
indicated
dialer
diagaram:
neg
conver[i]
max(arr[0..i])
conver
golf
matrix:
score:
array.groupby(fn)
fn(arr[i])
_.groupby
carpet
randomizedset
randomizedset()
called)
(it's
trees[j]
property:
bsts
createhelloworld
(well-formed)
1-bordered
satisfaction[i]
dish
dishes
satisfaction
preparation
reducing
like-time
prepared
discard
item)
beforeitems[i]
dependencies
mechanic
garage
ranksi
mechanics
p's
containedboxes
status[i]
containedboxes[i]
initialboxes
stores:
store's
product's
store2
store3
store1
'i')
('10#'
('j'
'26#')
fronts[i]
backs[i]
backs
fronts
argumentslength
mirrored)
180
alone
"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd...."
wraparound
wizards'
ruler
wizard
strength)
wizards
strength[i]
revealed:
reveal
(unrevealed)
"262124"
262124
#1:
convert:
26)
"zbax"
➝
"(26)(2)(1)(24)"
#2:
base-2
contrary
1001
k-mirror
2-mirror
base-10
base-k
equalize
getkthancestor(int
parent)
treeancestor(int
treeancestor
valley
valleys
hills
hill
click
revealing
[clickr
'8')
clickc]
char
diagonals)
game)!
(wikipedia
revealed
minesweeper
"089"]
[0,0,1]
["0"
[90,89]
"1"]
"0090089"
["00"
["0090"
"01"]
[0,1]
dfe"
"acb
"def
bef"
cab"
"adc
def"
obviously
crossed
unit)
49
1549
[new1
new1
2932
93]
new2
329]
[23
[22
92]
[223
new2]
presence
whitespaces
$10
bills[i]
bills)
$5
bills
lemonade
"[.]"
defanged
defanging
(ipv4)
100]
multiplications
"real+imaginaryi"
complex
[-100
imaginary
arrivali
prepare
prepares
timei]:
[2,1]
destvalue
step-by-step
ans[1]
ans[0]
ceiling
ceil(val)
ceil(nums[i]
g[i]
greed
with;
cookie
even-odd
matchsticks[i]
matchsticks
matchstick
circuit
gas[i]
station's
nums[left+1]
nums[right]
'scroll_down'
2019-07-27
'send_message')
'end_session'
session_id
activity_date
('open_session'
right.)
*/";"
"/*"
"string
macros
comment
"*/"
"//"
(non-overlapping)
implicit
"/*/"
control
comments
"/*
newline
substring)
worker[j]
difficulty[i]
$3
$0
worker[j])
"3245"
"2582"
customer_number
+-----------------+----------+
order_number
relation
xn-1
xn-2
return:
oriented
[4,1,2,3]
[2,1,4,3]
[4,3,2,1]
+...+
nums1[ik
n-1}
nums1[i1]
(nums1[i0]
nums2[i1]
min(nums2[i0]
,nums2[ik
"xi!=yi".here
forms:
"xi==yi"
one-letter
satisfiability
operations[i][0]
operations[i][1]
even-valued
grandparent
rights
victory:
radiant
ban
parties
exercise
parties:
senators
"radiant"
senator
announce
"dire"
victory
rights:
dota2
right:
voting
senate
round-based
dire
senator's
developed
develop
versions
isbadversion(version)
fails
"bcdea"
minutes)
$1000
or;
c[i]
erasures
stable
(rowi
hits[i]
bricks)
coli)
triangulate
triangulation
n-sided
[2,2,3]
primefactors
nodes:
(1)
"abcbabcbcb"
['a'
"ababbc"
(string
"baa"
"ac"
'c']
grayscale
smoother
rounding
surrounding
smoother)
img
answer[j])
(answer[i]
quantity[i]
factorial(10)
clumsy(10)
clumsy
loses)
(poor
score's
(1-indexed.)
it.)
(recall
s[i])
shift('a'
shift(c
shift('x'
shift(s[i-1]
depth(c)
⌋
n/3
⌊
countandsay(1)
saying
countandsay(n)
"say"
formula:
countandsay(n-1)
"3322251":
count-and-say
mistake
recentcounter
3000
t]
request)
ping(int
recentcounter()
ping
"(13)"
"1.0"
"0.0"
"00.01"
"(2
ambiguous
extraneous
"0.00"
".1"
0.5)"
comma.)
"(205)"
(occurring
"(1
3)"
"abaacc"
[numpassengersi
numpassengersi
pooling
vehicle
div[i]
word[0,...,i]
div
[2,1,3,4,7,11,29,18]
[18,29,11,7,4,3,1,2]
license
(rows
reward1
mice
reward2[i]
reward2
reward1[i]
gray
n-bit
second)
sqrt(2)
(num1
num2)
excellent
candiescount
dailycapi]
favoritetypei
candiescount[i]
dailycapi
[favoritetypei
favoritedayi
day?
apple)
reinitialize
perm[n
falsy
boolean(value)
"bbb"
sits
leave(int
p)
seat()
examroom
examroom(int
cards[i]
|func(arr
target|
mysterious
func
winston
soup
servings
soup:
ml's
ml
length-3
airplane
illuminated
lamp
illumination
grid[rowj][colj]
lamps[i]
illuminates
answering
lamps
fn(init
nums[2])
nums[1])
reducer
array.reduce
fn(val
|arr1[i]
arr2[j]|
arr1[j]|
|arr2[i]
productofnumbers()
overflowing
getproduct(int
productofnumbers
children;
notice:
"abcabc"
uncrossed
given)
(non-horizontal)
lines:
rank(q)
rank(p)
answer[row][col]
boomerangs
matters)
"346"
(s[0]
s[j])
"1110"
(s[i]
"0110"
s[2]
(2d)
1-dimensional
(1d)
distancei
pk
primitive
"(())()"
nonempty
decomposition:
outermost
"(()(()))"
overwrite
80ms
throttled
throttle
40ms
"a->b"
[a,b]
k-bit
(cells
thorn
(nums[i]-1)*(nums[j]-1)
res[r+1][c-2height-r-1]
res[r+1][c+2height-r-1]
2height+1
res[0][(n-1)/2])
res[r][c]
"19"
decoding
"18"
"16"
"15"
"17"
"1*"
"14"
"11"
athlete's
rank:
"gold
"silver
"bronze
"x")
athletes
medal"
athlete
score[i]
2⌋th
⌊x⌋
movecost[i][j]
examinations
subject_name
student_name
everywhere
swim
mat[r][c]
answer[i][j]
2m
max(m
bookmyshow(int
cases:
concert
spectators
bookmyshow
scatter(int
allocates
vary
hall
hence:
gather(int
(respectively)
ticketing
maxrow)
maxrow
permuted
2th
pillow
1th
weak
"baaabb0"
strong)
"baaba0"
revisit
portion
<integerpart>
<integerpart><.><nonrepeatingpart><(><repeatingpart><)>
<integerpart><.><nonrepeatingpart>
1.(9)
<repeatingpart>
1/6
0.166(66)
123.00(1212)
0.1666(6)
<nonrepeatingpart>
0.1(6)
0.16666666
123.0001
conventionally
2.12
[1,3,2,5,4]
uniquely-sized
parser's
"al"
"g"
interpret
interpretation
"(al)"
edges'
distancethreshold
acquire
key;
locks
additionalrocks
capacity[i]
rocks[i]
rocks
mynumbers
wordk]
predecessor
wordb
[word1
worda
word3
"abac"
"bcad"
lets
[mini
maxi]:
maxi
rowconditions
[abovei
belowi
rowconditions[i]
colconditions[i]
colconditions
given:
belowi]
abovei
[f(x)
fn]
h(x)]
[f1
fn(x)
g(x)
f(g(h(x)))
f3
identity
numbercontainers
fills
change(int
numbercontainers()
mapping[i]
jumbled
determining
obstruct
vision
posy]
posy
posx
[d
angle/2
[posx
angle/2]
strings)
motion
involved
collided
directions[i]
arr.length)
toggling
"12344"
"14234"
transformable
endtime[i]]
querytime
homework
[starttime[i]
lays
basestr
s2[i]
relation:
"eed"
"cde"
"acd"
equivalency
equivalence
transitivity:
reflexivity:
symmetry:
implies
"bcfd"
"abca"
word.length
"abacba"
enqueuetimei
[enqueuetimei
act
processingtimei]
processingtimei
<row>
<row2>
c1
"<col><row>"
rth
<col1>
"<col1><row1>:<col2><row2>"
<col2>
<col>
<row1>
possible:
"cd"
concatenates
creative
clarification:
serializes
approaches
mycalendartwo
mycalendartwo()
[1,2,5]
self-loops
(0th)
(i-2)th
